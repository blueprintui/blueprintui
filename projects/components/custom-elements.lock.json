{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "/accordion/content/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/accordion/content/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Accordion Content",
          "name": "BpAccordionContent",
          "cssProperties": [
            {
              "name": "--color"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--font-weight"
            },
            {
              "name": "--background"
            }
          ],
          "slots": [
            {
              "description": "slot for content",
              "name": ""
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-accordion-content",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpAccordionContent",
          "declaration": {
            "name": "BpAccordionContent",
            "module": "/accordion/content/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/accordion/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/accordion/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "\n```javascript\nimport '@blueprintui/components/include/accordion.js';\n```\n\n```html\n<bp-accordion>\n  <bp-accordion-panel expanded>\n    <bp-accordion-header>Item 1</bp-accordion-header>\n    <bp-accordion-content>Content 1</bp-accordion-content>\n  </bp-accordion-panel>\n  <bp-accordion-panel>\n    <bp-accordion-header>Item 2</bp-accordion-header>\n    <bp-accordion-content>Content 2</bp-accordion-content>\n  </bp-accordion-panel>\n  <bp-accordion-panel disabled>\n    <bp-accordion-header>Item 3</bp-accordion-header>\n    <bp-accordion-content>Content 3</bp-accordion-content>\n  </bp-accordion-panel>\n</bp-accordion>\n```",
          "name": "BpAccordion",
          "cssProperties": [
            {
              "name": "--border-color"
            },
            {
              "name": "--border-width"
            },
            {
              "name": "--border-radius"
            }
          ],
          "slots": [
            {
              "description": "slot for accordion panels",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines the visual layer style (container vs flat for nesting)",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "layer",
              "type": {
                "text": "'flat' | 'container'"
              },
              "default": "'container'"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determines the visual layer style (container vs flat for nesting)",
              "fieldName": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-accordion",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpAccordion",
          "declaration": {
            "name": "BpAccordion",
            "module": "/accordion/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/accordion/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/accordion/header/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/accordion/header/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Accordion Header",
          "name": "BpAccordionHeader",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--padding"
            }
          ],
          "slots": [
            {
              "description": "slot for header content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines the current value",
              "attribute": "popovertarget",
              "reflects": true,
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "pressed",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetElement",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetAction",
              "type": {
                "text": "| 'toggle'\n    | 'show'\n    | 'hide'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popovertarget",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "HTMLFormElement"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAction",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formEnctype",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formMethod",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formNoValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formTarget",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "labels",
              "type": {
                "text": "NodeListOf<HTMLLabelElement>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validity",
              "type": {
                "text": "ValidityState"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "willValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "checkValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "reportValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "setCustomValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              },
              "readonly": true,
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseButton",
            "package": "@blueprintui/components/internals"
          },
          "tagName": "bp-accordion-header",
          "customElement": true,
          "attributes": [
            {
              "name": "accessor",
              "description": "determines the current value",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertargetaction",
              "description": "determines the current value",
              "attribute": "accessor",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertarget",
              "description": "determines the current value",
              "attribute": "popovertargetaction",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpAccordionHeader",
          "declaration": {
            "name": "BpAccordionHeader",
            "module": "/accordion/header/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/accordion/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./panel/element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./content/element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./header/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/accordion/panel/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/accordion/panel/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Accordion Panel",
          "name": "BpAccordionPanel",
          "slots": [
            {
              "description": "slot for header and content",
              "name": ""
            },
            {
              "name": "bp-accordion-header"
            },
            {
              "name": "bp-accordion-content"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determine if element is expanded",
              "attribute": "accessor"
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "#header",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#content",
              "privacy": "private",
              "readonly": true
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determine if element is expanded",
              "fieldName": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-accordion-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpAccordionPanel",
          "declaration": {
            "name": "BpAccordionPanel",
            "module": "/accordion/panel/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/alert/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/alert/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/alert.js';\n```\n\n```html\n<bp-alert status=\"success\">alert</bp-alert>\n```",
          "name": "BpAlert",
          "cssProperties": [
            {
              "name": "--icon-color"
            },
            {
              "name": "--color"
            }
          ],
          "slots": [
            {
              "description": "slot for content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "'accent' | 'success' | 'warning' | 'danger'"
              }
            },
            {
              "kind": "field",
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "interactionCloseController",
              "type": {
                "text": "InteractionCloseController<this>"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#close"
            }
          ],
          "events": [
            {
              "description": "close",
              "name": ""
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-alert",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpAlert",
          "declaration": {
            "name": "BpAlert",
            "module": "/alert/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/alert/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/alert/group/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/alert/group/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/alert.js';\n```\n\n```html\n<bp-alert-group status=\"success\">\n  <bp-alert>alert</bp-alert>\n</bp-alert-group>\n```",
          "name": "BpAlertGroup",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--border-radius"
            }
          ],
          "slots": [
            {
              "description": "slot for content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determine the visual styles for top/pinned banners",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "'accent' | 'success' | 'warning' | 'danger'"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'banner'"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determine the visual styles for top/pinned banners",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-alert-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpAlertGroup",
          "declaration": {
            "name": "BpAlertGroup",
            "module": "/alert/group/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/alert/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./group/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/badge/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/badge/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/badge.js';\n```\n\n```html\n<bp-badge status=\"warning\">2</bp-badge>\n```",
          "name": "BpBadge",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--width"
            },
            {
              "name": "--height"
            },
            {
              "name": "--min-width"
            },
            {
              "name": "--min-height"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--padding"
            }
          ],
          "slots": [
            {
              "description": "badge content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determine the visual status state",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "'accent' | 'success' | 'warning' | 'danger'"
              }
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determine the visual status state",
              "fieldName": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-badge",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpBadge",
          "declaration": {
            "name": "BpBadge",
            "module": "/badge/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/badge/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/badge/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/breadcrumb/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/breadcrumb/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Breadcrumb\n\n```typescript\nimport '@blueprintui/components/include/breadcrumb.js';\n```\n\n```html\n<bp-breadcrumb aria-label=\"breadcrumb\">\n  <a bp-text=\"link\" href=\"/home\">Home</a>\n  <a bp-text=\"link\" href=\"/parent\">Parent page</a>\n  <p bp-text=\"content\" aria-current=\"page\">Current page</p>\n</bp-breadcrumb>\n```",
          "name": "BpBreadcrumb",
          "cssProperties": [
            {
              "name": "--font-size"
            },
            {
              "name": "--font-weight"
            },
            {
              "name": "--color"
            },
            {
              "name": "--gap"
            }
          ],
          "cssParts": [
            {
              "name": "separator"
            }
          ],
          "slots": [
            {
              "description": "breadcrumb items",
              "name": ""
            },
            {
              "description": "separator",
              "name": "separator"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#items",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#separator",
              "privacy": "private",
              "readonly": true
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-breadcrumb",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpBreadcrumb",
          "declaration": {
            "name": "BpBreadcrumb",
            "module": "/breadcrumb/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/breadcrumb/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/breadcrumb/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/button-expand/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button-expand/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Expand Button\n\n```typescript\nimport '@blueprintui/components/include/button-expand.js';\n```\n\n```html\n<bp-button-expand expanded></bp-button-expand>\n```",
          "name": "BpButtonExpand",
          "cssProperties": [
            {
              "name": "--animation-duration"
            }
          ],
          "slots": [
            {
              "description": "slot for custom bp-icon",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines if element is mutable or focusable",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "'on'"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "'vertical' | 'horizontal'"
              },
              "default": "'vertical'"
            },
            {
              "kind": "field",
              "name": "i18n",
              "type": {
                "text": "I18nStrings['actions']"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true"
            },
            {
              "kind": "field",
              "name": "#iconDirection",
              "privacy": "private",
              "readonly": true
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "input"
            },
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determines if element is mutable or focusable",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-button-expand",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpButtonExpand",
          "declaration": {
            "name": "BpButtonExpand",
            "module": "/button-expand/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/button-expand/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button-expand/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/button-group/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button-group/element.global.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button-group/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Button\n\n```typescript\nimport '@blueprintui/components/include/button.js';\n```\n\n```html\n<bp-button-group>\n  <bp-button></bp-button>\n  <bp-button></bp-button>\n</bp-button-group>\n```",
          "name": "BpButtonGroup",
          "slots": [
            {
              "description": "button content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "'primary' | 'outline' | 'flat'"
              },
              "default": "'primary'"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "fieldName": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-button-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpButtonGroup",
          "declaration": {
            "name": "BpButtonGroup",
            "module": "/button-group/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/button-group/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button-group/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/button-handle/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button-handle/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Action Handle Button\n\n```typescript\nimport '@blueprintui/components/include/button-handle.js';\n```\n\n```html\n<bp-button-handle></bp-button-handle>\n```",
          "name": "BpButtonHandle",
          "cssProperties": [
            {
              "name": "--cursoe"
            },
            {
              "name": "--icon-width"
            },
            {
              "name": "--icon-height"
            }
          ],
          "slots": [
            {
              "description": "slot for text content or bp-icon",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "i18n",
              "inheritedFrom": {
                "name": "BpButtonIcon",
                "module": "/button-icon/element.js"
              }
            },
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "string"
              },
              "default": "'ellipsis-vertical'",
              "inheritedFrom": {
                "name": "BpButtonIcon",
                "module": "/button-icon/element.js"
              }
            },
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BpButtonIcon",
                "module": "/button-icon/element.js"
              }
            },
            {
              "kind": "field",
              "name": "direction",
              "type": {
                "text": "any"
              },
              "inheritedFrom": {
                "name": "BpButtonIcon",
                "module": "/button-icon/element.js"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpButtonIcon",
                "module": "/button-icon/element.js"
              }
            },
            {
              "kind": "field",
              "name": "pressed",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetElement",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetAction",
              "type": {
                "text": "| 'toggle'\n    | 'show'\n    | 'hide'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popovertarget",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "HTMLFormElement"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAction",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formEnctype",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formMethod",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formNoValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formTarget",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "labels",
              "type": {
                "text": "NodeListOf<HTMLLabelElement>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validity",
              "type": {
                "text": "ValidityState"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "willValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "checkValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "reportValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "setCustomValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              },
              "readonly": true,
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ],
          "superclass": {
            "name": "BpButtonIcon",
            "package": "@blueprintui/components/button-icon"
          },
          "tagName": "bp-button-handle",
          "customElement": true,
          "attributes": [
            {
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertargetaction",
              "description": "determines the current value",
              "attribute": "accessor",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertarget",
              "description": "determines the current value",
              "attribute": "popovertargetaction",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpButtonHandle",
          "declaration": {
            "name": "BpButtonHandle",
            "module": "/button-handle/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/button-handle/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button-handle/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/button-icon-group/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button-icon-group/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Button\n\n```typescript\nimport '@blueprintui/components/include/button-icon-group.js';\n```\n\n```html\n<bp-button-icon-group>\n  <bp-button-icon shape=\"font-size\" aria-label=\"font size\"></bp-button-icon>\n  <bp-button-icon selected shape=\"italic\" aria-label=\"italic\"></bp-button-icon>\n  <bp-button-icon disabled shape=\"number-list\" aria-label=\"number list\"></bp-button-icon>\n</bp-button-icon-group>\n```",
          "name": "BpButtonIconGroup",
          "cssProperties": [
            {
              "name": "--border"
            },
            {
              "name": "--border-radius"
            }
          ],
          "slots": [
            {
              "description": "slot for bp-icon",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "buttons",
              "readonly": true
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-button-icon-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpButtonIconGroup",
          "declaration": {
            "name": "BpButtonIconGroup",
            "module": "/button-icon-group/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/button-icon-group/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button-icon-group/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/button-icon/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button-icon/element.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "buttonIconStyles",
          "default": "styles"
        },
        {
          "kind": "class",
          "description": "Action Button\n\n```typescript\nimport '@blueprintui/components/include/button-icon.js';\n```\n\n```html\n<bp-button-icon></bp-button-icon>\n```",
          "name": "BpButtonIcon",
          "cssProperties": [
            {
              "name": "--width"
            },
            {
              "name": "--height"
            },
            {
              "name": "--color"
            },
            {
              "name": "--cursor"
            },
            {
              "name": "--background"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--outline"
            },
            {
              "name": "--outline-offset"
            },
            {
              "name": "--border"
            }
          ],
          "cssParts": [
            {
              "name": "icon"
            }
          ],
          "slots": [
            {
              "description": "slot for text content or bp-icon",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "shape",
              "type": {
                "text": "string"
              },
              "default": "'ellipsis-vertical'"
            },
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "direction",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "field",
              "name": "icon",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "pressed",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetElement",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetAction",
              "type": {
                "text": "| 'toggle'\n    | 'show'\n    | 'hide'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popovertarget",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "HTMLFormElement"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAction",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formEnctype",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formMethod",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formNoValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formTarget",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "labels",
              "type": {
                "text": "NodeListOf<HTMLLabelElement>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validity",
              "type": {
                "text": "ValidityState"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "willValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "checkValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "reportValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "setCustomValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              },
              "readonly": true,
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertargetaction",
              "description": "determines the current value",
              "attribute": "accessor",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertarget",
              "description": "determines the current value",
              "attribute": "popovertargetaction",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseButton",
            "package": "@blueprintui/components/internals"
          },
          "tagName": "bp-button-icon",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "buttonIconStyles",
          "declaration": {
            "name": "buttonIconStyles",
            "module": "/button-icon/element.js"
          }
        },
        {
          "kind": "js",
          "name": "BpButtonIcon",
          "declaration": {
            "name": "BpButtonIcon",
            "module": "/button-icon/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/button-icon/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button-icon/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/button-resize/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button-resize/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Button Resize\n\n```typescript\nimport '@blueprintui/components/include/button-reisze.js';\n```\n\n```html\n<bp-button-resize></bp-button-resize>\n```",
          "name": "BpButtonResize",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--width"
            },
            {
              "name": "--height"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "accessor",
              "description": "number that specifies the granularity that the value",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | number | FormData | File"
              },
              "default": "50",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "default": "100",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number"
              },
              "default": "1"
            },
            {
              "kind": "field",
              "name": "direction",
              "type": {
                "text": "'vertical' | 'horizontal'"
              },
              "default": "'horizontal'"
            },
            {
              "kind": "field",
              "name": "typeFormSliderController",
              "privacy": "protected",
              "default": "new TypeFormSliderController<BpButtonResize>(this)"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "valueAsNumber",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "privacy": "protected",
              "default": "new TypeFormControlController<FormControl>(this)",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "composedLabel",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#setValue",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "config",
                  "default": "{ valueType: 'string' }"
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onInput",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "number that specifies the granularity that the value",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "superclass": {
            "name": "FormControl",
            "package": "@blueprintui/components/forms"
          },
          "tagName": "bp-button-resize",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpButtonResize",
          "declaration": {
            "name": "BpButtonResize",
            "module": "/button-resize/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/button-resize/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button-resize/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/button-sort/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button-sort/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Button Sort\nhttps://www.w3.org/WAI/ARIA/apg/patterns/spinbutton/\n\n```typescript\nimport '@blueprintui/components/include/button-sort.js';\n```\n\n```html\n<bp-button-sort></bp-button-sort>\n```",
          "name": "BpButtonSort",
          "cssProperties": [
            {
              "name": "--width"
            },
            {
              "name": "--height"
            },
            {
              "name": "--color"
            },
            {
              "name": "--cursor"
            },
            {
              "name": "--background"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--outline"
            },
            {
              "name": "--outline-offset"
            },
            {
              "name": "--border"
            },
            {
              "name": "--gap"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines if element is mutable or focusable",
              "attribute": "accessor"
            },
            {
              "kind": "field",
              "name": "i18n",
              "type": {
                "text": "I18nStrings['actions']"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "ButtonSort"
              },
              "default": "'none'"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "type": {
                "text": "TypeFormControlController<this>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true"
            },
            {
              "kind": "method",
              "name": "#keydown",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#updateValue",
              "parameters": [
                {
                  "name": "step",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#updateStates"
            },
            {
              "kind": "method",
              "name": "#input"
            },
            {
              "kind": "method",
              "name": "#change"
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "input"
            },
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determines if element is mutable or focusable",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-button-sort",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpButtonSort",
          "declaration": {
            "name": "BpButtonSort",
            "module": "/button-sort/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/button-sort/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button-sort/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/button/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Button\n\n```typescript\nimport '@blueprintui/components/include/button.js';\n```\n\n```html\n<bp-button>submit</bp-button>\n```",
          "name": "BpButton",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--border"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--min-width"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--line-height"
            },
            {
              "name": "--text-align"
            }
          ],
          "slots": [
            {
              "description": "button content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determine the visual status state",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "action",
              "type": {
                "text": "'primary' | 'outline' | 'flat'"
              },
              "default": "'primary'"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "'accent' | 'success' | 'warning' | 'danger'"
              }
            },
            {
              "kind": "field",
              "name": "pressed",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetElement",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetAction",
              "type": {
                "text": "| 'toggle'\n    | 'show'\n    | 'hide'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popovertarget",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "HTMLFormElement"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAction",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formEnctype",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formMethod",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formNoValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formTarget",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "labels",
              "type": {
                "text": "NodeListOf<HTMLLabelElement>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validity",
              "type": {
                "text": "ValidityState"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "willValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "checkValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "reportValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "setCustomValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              },
              "readonly": true,
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determine the visual status state",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertargetaction",
              "description": "determines the current value",
              "attribute": "accessor",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertarget",
              "description": "determines the current value",
              "attribute": "popovertargetaction",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseButton",
            "package": "@blueprintui/components/internals"
          },
          "tagName": "bp-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpButton",
          "declaration": {
            "name": "BpButton",
            "module": "/button/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/button/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/button/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/card/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/card/element.global.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/card/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/card.js';\n```\n\n```html\n<bp-card>\n  Card Content\n</bp-card>\n```",
          "name": "BpCard",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--height"
            },
            {
              "name": "--width"
            }
          ],
          "slots": [
            {
              "description": "slot for card content",
              "name": ""
            },
            {
              "description": "slot for card header",
              "name": "header"
            },
            {
              "description": "slot for card footer",
              "name": "footer"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-card",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpCard",
          "declaration": {
            "name": "BpCard",
            "module": "/card/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/card/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/card/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/chat/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/chat/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/chat.js';\n```\n\n```html\n<bp-chat-group>\n  <bp-chat-message type=\"sent\">How are you?</bp-chat-message>\n  <bp-chat-message type=\"received\">Great!</bp-chat-message>\n</bp-chat-group>\n```",
          "name": "BpChatMessage",
          "slots": [
            {
              "description": "content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "display a typing or progress spinner",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'sent' | 'received'"
              }
            },
            {
              "kind": "field",
              "name": "color",
              "type": {
                "text": "'blue' | 'green' | 'red' | 'yellow' | 'purple'"
              }
            },
            {
              "kind": "field",
              "name": "arrow",
              "type": {
                "text": "Position"
              }
            },
            {
              "kind": "field",
              "name": "progress",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "display a typing or progress spinner",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-chat-message",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpChatMessage",
          "declaration": {
            "name": "BpChatMessage",
            "module": "/chat/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/chat/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/chat/group/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/chat/group/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/chat.js';\n```\n\n```html\n<bp-chat-group>\n  <bp-chat-message type=\"sent\">How are you?</bp-chat-message>\n  <bp-chat-message type=\"received\">Great!</bp-chat-message>\n</bp-chat-group>\n```",
          "name": "BpChatGroup",
          "slots": [
            {
              "description": "content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-chat-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpChatGroup",
          "declaration": {
            "name": "BpChatGroup",
            "module": "/chat/group/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/chat/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./group/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/checkbox/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/checkbox/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/checkbox.js';\n```\n\n```html\n<bp-field>\n  <label>checkbox</label>\n  <bp-checkbox checked></bp-checkbox>\n</bp-field>\n```",
          "name": "BpCheckbox",
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines whether element is checked",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | number | FormData | File"
              },
              "default": "'on'",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "valueAsNumber",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "privacy": "protected",
              "default": "new TypeFormControlController<FormControl>(this)",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "composedLabel",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#setValue",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "config",
                  "default": "{ valueType: 'string' }"
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onInput",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determines whether element is checked",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "superclass": {
            "name": "FormControl",
            "package": "@blueprintui/components/forms"
          },
          "tagName": "bp-checkbox",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpCheckbox",
          "declaration": {
            "name": "BpCheckbox",
            "module": "/checkbox/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/checkbox/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/checkbox/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/color/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/color/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Input\n\n```typescript\nimport '@blueprintui/components/include/color.js';\n```\n\n```html\n<bp-field>\n  <label>color</label>\n  <bp-color></bp-color>\n</bp-field>\n```",
          "name": "BpColor",
          "cssProperties": [
            {
              "name": "--background"
            }
          ],
          "slots": [
            {
              "description": "slot for prefix text or icons",
              "name": "prefix"
            },
            {
              "description": "slot for suffic text or icons",
              "name": "suffix"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines number of characters",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'color'",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#chooseColor"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | number | FormData | File"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "method",
              "name": "showPicker",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "valueAsNumber",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "privacy": "protected",
              "default": "new TypeFormControlController<FormControl>(this)",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "composedLabel",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#setValue",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "config",
                  "default": "{ valueType: 'string' }"
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onInput",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "input",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determines number of characters",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "superclass": {
            "name": "BpInput",
            "package": "@blueprintui/components/input"
          },
          "tagName": "bp-color",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpColor",
          "declaration": {
            "name": "BpColor",
            "module": "/color/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/color/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/color/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/date/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/date/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Date Input\n\n```typescript\nimport '@blueprintui/components/include/date.js';\n```\n\n```html\n<bp-field>\n  <label>time</label>\n  <bp-date></bp-date>\n  <bp-field-message>message text</bp-field-message>\n</bp-field>\n```",
          "name": "BpDate",
          "slots": [
            {
              "description": "slot for prefix text or icons",
              "name": "prefix"
            },
            {
              "description": "slot for suffic text or icons",
              "name": "suffix"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines number of characters",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'date'",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "valueAsDate"
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | number | FormData | File"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "method",
              "name": "showPicker",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "valueAsNumber",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "privacy": "protected",
              "default": "new TypeFormControlController<FormControl>(this)",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "composedLabel",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#setValue",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "config",
                  "default": "{ valueType: 'string' }"
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onInput",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "input",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determines number of characters",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "superclass": {
            "name": "BpInput",
            "package": "@blueprintui/components/input"
          },
          "tagName": "bp-date",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpDate",
          "declaration": {
            "name": "BpDate",
            "module": "/date/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/date/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/date/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/dialog/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/dialog/element.global.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/dialog/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/dialog.js';\n```\n\n```html\n<bp-dialog>\n\n</bp-dialog>\n```",
          "name": "BpDialog",
          "cssProperties": [
            {
              "name": "--padding"
            },
            {
              "name": "--filter"
            },
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--width"
            },
            {
              "name": "--height"
            },
            {
              "name": "--min-width"
            },
            {
              "name": "--min-height"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--internal-offset-margin"
            },
            {
              "name": "--animation-duration"
            }
          ],
          "slots": [
            {
              "description": "slot for dialog content",
              "name": ""
            },
            {
              "description": "slot for dialog header",
              "name": "header"
            },
            {
              "description": "slot for dialog footer",
              "name": "footer"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'sm' | 'md' | 'lg'"
              }
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "Position"
              },
              "default": "'center'"
            },
            {
              "kind": "field",
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "trigger",
              "type": {
                "text": "HTMLElement | string"
              }
            },
            {
              "kind": "field",
              "name": "modal",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "hidden",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "typePopoverController",
              "type": {
                "text": "TypePopoverController<this>"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#close"
            }
          ],
          "events": [
            {
              "description": "dispatched when the dialog is opened",
              "name": "open"
            },
            {
              "description": "dispatched when the dialog is closed",
              "name": "close"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-dialog",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpDialog",
          "declaration": {
            "name": "BpDialog",
            "module": "/dialog/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/dialog/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/dialog/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/divider/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/divider/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Divider\n\n```typescript\nimport '@blueprintui/components/include/divider.js';\n```\n\n```html\n<bp-divider></bp-divider>\n```",
          "name": "BpDivider",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--size"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "attribute": "accessor"
            },
            {
              "kind": "field",
              "name": "orientation",
              "type": {
                "text": "'horizontal' | 'vertical'"
              },
              "default": "'horizontal'"
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'separator'"
            },
            {
              "kind": "field",
              "name": "ariaOrientation",
              "type": {
                "text": "string"
              },
              "default": "'horizontal'"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "fieldName": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-divider",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpDivider",
          "declaration": {
            "name": "BpDivider",
            "module": "/divider/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/divider/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/divider/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/drawer/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/drawer/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/drawer.js';\n```\n\n```html\n<bp-drawer></bp-drawer>\n```",
          "name": "BpDrawer",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--width"
            },
            {
              "name": "--height"
            },
            {
              "name": "--overflow"
            }
          ],
          "slots": [
            {
              "description": "slot for drawer content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "'left' | 'right'"
              },
              "default": "'left'"
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "typePopoverController",
              "type": {
                "text": "TypePopoverController<this>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            },
            {
              "kind": "method",
              "name": "#close"
            }
          ],
          "events": [
            {
              "description": "dispatched when the drawer is opened",
              "name": "open"
            },
            {
              "description": "dispatched when the drawer is closed",
              "name": "close"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-drawer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpDrawer",
          "declaration": {
            "name": "BpDrawer",
            "module": "/drawer/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/drawer/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/drawer/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/dropdown/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/dropdown/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/dropdown.js';\n```\n\n```html\n<bp-dropdown closable>\n\n</bp-dropdown>\n```",
          "name": "BpDropdown",
          "cssProperties": [
            {
              "name": "--padding"
            },
            {
              "name": "--filter"
            },
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--width"
            },
            {
              "name": "--height"
            },
            {
              "name": "--min-width"
            },
            {
              "name": "--min-height"
            },
            {
              "name": "--font-size"
            }
          ],
          "slots": [
            {
              "description": "content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "HTMLElement | string"
              }
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "Position"
              },
              "default": "'bottom'"
            },
            {
              "kind": "field",
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "trigger",
              "type": {
                "text": "HTMLElement | string"
              }
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "hidden",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "typePopoverController",
              "type": {
                "text": "TypePopoverController<this>"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            },
            {
              "kind": "method",
              "name": "#setMenu"
            },
            {
              "kind": "method",
              "name": "#close"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-dropdown",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpDropdown",
          "declaration": {
            "name": "BpDropdown",
            "module": "/dropdown/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/dropdown/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/dropdown/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/file/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/file/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "File Input\n\n```typescript\nimport '@blueprintui/components/include/file.js';\n```\n\n```html\n<bp-field>\n  <label>file</label>\n  <bp-file></bp-file>\n</bp-field>\n```",
          "name": "BpFile",
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "attribute": "accessor",
              "reflects": true,
              "privacy": "private",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "accept",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "buttonLabel"
            },
            {
              "kind": "field",
              "name": "files",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "inputControl",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#button",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#showPicker"
            },
            {
              "kind": "method",
              "name": "#change",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#setControlWidth"
            },
            {
              "kind": "method",
              "name": "#clearFiles",
              "parameters": [
                {
                  "name": "fireEvent",
                  "default": "true"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#updateLabelAndFocus",
              "parameters": [
                {
                  "name": "files",
                  "optional": true,
                  "type": {
                    "text": "FileList"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | number | FormData | File"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "valueAsNumber",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "privacy": "protected",
              "default": "new TypeFormControlController<FormControl>(this)",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "composedLabel",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#setValue",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "config",
                  "default": "{ valueType: 'string' }"
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onInput",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "input"
            },
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "superclass": {
            "name": "FormControl",
            "package": "@blueprintui/components/forms"
          },
          "tagName": "bp-file",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpFile",
          "declaration": {
            "name": "BpFile",
            "module": "/file/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/file/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/file/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/format-datetime/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/format-datetime/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/format-datetime.js';\n```\n\n```html\n<bp-format-datetime></bp-format-datetime>\n```",
          "name": "BpFormatDatetime",
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "privacy": "private",
              "attribute": "time-zone"
            },
            {
              "kind": "field",
              "name": "locale",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "weekday",
              "type": {
                "text": "'long' | 'short' | 'narrow'"
              }
            },
            {
              "kind": "field",
              "name": "year",
              "type": {
                "text": "'numeric' | '2-digit'"
              }
            },
            {
              "kind": "field",
              "name": "month",
              "type": {
                "text": "'numeric' | '2-digit' | 'long' | 'short' | 'narrow'"
              }
            },
            {
              "kind": "field",
              "name": "day",
              "type": {
                "text": "'numeric' | '2-digit'"
              }
            },
            {
              "kind": "field",
              "name": "hour",
              "type": {
                "text": "'numeric' | '2-digit'"
              }
            },
            {
              "kind": "field",
              "name": "minute",
              "type": {
                "text": "'numeric' | '2-digit'"
              }
            },
            {
              "kind": "field",
              "name": "second",
              "type": {
                "text": "'numeric' | '2-digit'"
              }
            },
            {
              "kind": "field",
              "name": "dateStyle",
              "type": {
                "text": "'full' | 'long' | 'medium' | 'short'"
              }
            },
            {
              "kind": "field",
              "name": "timeStyle",
              "type": {
                "text": "'full' | 'long' | 'medium' | 'short'"
              }
            },
            {
              "kind": "field",
              "name": "timeZoneName",
              "type": {
                "text": "'long' | 'short'"
              }
            },
            {
              "kind": "field",
              "name": "timeZone",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "value"
            },
            {
              "kind": "field",
              "name": "#value",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "fieldName": "accessor",
              "attribute": "accessor"
            },
            {
              "name": "date-style",
              "attribute": "accessor",
              "fieldName": "accessor"
            },
            {
              "name": "time-style",
              "attribute": "date-style",
              "fieldName": "accessor"
            },
            {
              "name": "time-zone-name",
              "attribute": "time-style",
              "fieldName": "accessor"
            },
            {
              "name": "time-zone",
              "attribute": "time-zone-name",
              "fieldName": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-format-datetime",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpFormatDatetime",
          "declaration": {
            "name": "BpFormatDatetime",
            "module": "/format-datetime/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/format-datetime/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/format-number/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/format-number/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/format-number.js';\n```\n\n```html\n<bp-format-number></bp-format-number>\n```",
          "name": "BpFormatNumber",
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "privacy": "private",
              "attribute": "sign-display"
            },
            {
              "kind": "field",
              "name": "format",
              "type": {
                "text": "'currency' | 'decimal' | 'percent'"
              },
              "default": "'decimal'"
            },
            {
              "kind": "field",
              "name": "currency",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "locales",
              "type": {
                "text": "string[]"
              }
            },
            {
              "kind": "field",
              "name": "currencySign",
              "type": {
                "text": "'standard' | 'accounting'"
              }
            },
            {
              "kind": "field",
              "name": "currencyDisplay",
              "type": {
                "text": "'symbol' | 'code' | 'name'"
              }
            },
            {
              "kind": "field",
              "name": "compactDisplay",
              "type": {
                "text": "'short' | 'long'"
              }
            },
            {
              "kind": "field",
              "name": "unitDisplay",
              "type": {
                "text": "'long' | 'short' | 'narrow'"
              }
            },
            {
              "kind": "field",
              "name": "notation",
              "type": {
                "text": "'standard' | 'scientific' | 'engineering' | 'compact'"
              }
            },
            {
              "kind": "field",
              "name": "signDisplay",
              "type": {
                "text": "| 'auto'\n    | 'never'\n    | 'always'\n    | 'exceptZero'"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "#value",
              "privacy": "private",
              "readonly": true
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "fieldName": "accessor",
              "attribute": "unit-display"
            },
            {
              "name": "currency-sign",
              "attribute": "accessor",
              "fieldName": "accessor"
            },
            {
              "name": "currency-display",
              "attribute": "currency-sign",
              "fieldName": "accessor"
            },
            {
              "name": "compact-display",
              "attribute": "currency-display",
              "fieldName": "accessor"
            },
            {
              "name": "unit-display",
              "attribute": "compact-display",
              "fieldName": "accessor"
            },
            {
              "name": "sign-display",
              "attribute": "accessor",
              "fieldName": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-format-number",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpFormatNumber",
          "declaration": {
            "name": "BpFormatNumber",
            "module": "/format-number/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/format-number/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/forms/controllers/state-form-control.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "stateFormControl",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "StateControlController",
          "members": [
            {
              "kind": "field",
              "name": "#observers",
              "privacy": "private",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "#input",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            },
            {
              "kind": "method",
              "name": "#resetValidity"
            },
            {
              "kind": "method",
              "name": "#updateValidity"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stateFormControl",
          "declaration": {
            "name": "stateFormControl",
            "module": "/forms/controllers/state-form-control.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "StateControlController",
          "declaration": {
            "name": "StateControlController",
            "module": "/forms/controllers/state-form-control.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/forms/controllers/type-form-checkbox.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "typeFormCheckbox",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          },
          "parameters": [
            {
              "name": "config",
              "default": "{ requireName: false }"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "TypeFormCheckboxController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "#check"
            },
            {
              "kind": "method",
              "name": "#updateValue"
            },
            {
              "kind": "method",
              "name": "#updateState"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "typeFormCheckbox",
          "declaration": {
            "name": "typeFormCheckbox",
            "module": "/forms/controllers/type-form-checkbox.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "TypeFormCheckboxController",
          "declaration": {
            "name": "TypeFormCheckboxController",
            "module": "/forms/controllers/type-form-checkbox.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/forms/controllers/type-form-control.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "typeFormControl",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "TypeFormControlController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "reset"
            },
            {
              "kind": "method",
              "name": "dispatchChange",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispatchInput",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#updateAria"
            },
            {
              "kind": "method",
              "name": "#reportValidity"
            },
            {
              "kind": "method",
              "name": "#checkValidity"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "typeFormControl",
          "declaration": {
            "name": "typeFormControl",
            "module": "/forms/controllers/type-form-control.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "TypeFormControlController",
          "declaration": {
            "name": "TypeFormControlController",
            "module": "/forms/controllers/type-form-control.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/forms/controllers/type-form-radio.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "typeFormRadio",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "TypeFormRadioController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "#check"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "typeFormRadio",
          "declaration": {
            "name": "typeFormRadio",
            "module": "/forms/controllers/type-form-radio.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "TypeFormRadioController",
          "declaration": {
            "name": "TypeFormRadioController",
            "module": "/forms/controllers/type-form-radio.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/forms/controllers/type-form-slider.controller.js",
      "declarations": [
        {
          "kind": "class",
          "description": "https://www.w3.org/WAI/ARIA/apg/patterns/slider/",
          "name": "TypeFormSliderController",
          "members": [
            {
              "kind": "field",
              "name": "interactionTouchController",
              "type": {
                "text": "InteractionTouchController<T>"
              },
              "privacy": "protected",
              "default": "new InteractionTouchController(this.host)"
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "type": {
                "text": "TypeFormControlController<T>"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "#value",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "#keydown",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#touchMove",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#touchEnd"
            },
            {
              "kind": "method",
              "name": "#input"
            },
            {
              "kind": "method",
              "name": "#change"
            },
            {
              "kind": "method",
              "name": "#validRange",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TypeFormSliderController",
          "declaration": {
            "name": "TypeFormSliderController",
            "module": "/forms/controllers/type-form-slider.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/forms/controllers/type-form-switch.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "typeFormSwitch",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          },
          "parameters": [
            {
              "name": "config",
              "default": "{ requireName: false }"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "TypeFormSwitchController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected",
              "inheritedFrom": {
                "name": "TypeFormCheckboxController",
                "module": "/forms/controllers/type-form-checkbox.controller.js"
              }
            },
            {
              "kind": "method",
              "name": "hostUpdated",
              "inheritedFrom": {
                "name": "TypeFormCheckboxController",
                "module": "/forms/controllers/type-form-checkbox.controller.js"
              }
            },
            {
              "kind": "method",
              "name": "#check",
              "inheritedFrom": {
                "name": "TypeFormCheckboxController",
                "module": "/forms/controllers/type-form-checkbox.controller.js"
              }
            },
            {
              "kind": "method",
              "name": "#updateValue",
              "inheritedFrom": {
                "name": "TypeFormCheckboxController",
                "module": "/forms/controllers/type-form-checkbox.controller.js"
              }
            },
            {
              "kind": "method",
              "name": "#updateState",
              "inheritedFrom": {
                "name": "TypeFormCheckboxController",
                "module": "/forms/controllers/type-form-checkbox.controller.js"
              }
            }
          ],
          "superclass": {
            "name": "TypeFormCheckboxController",
            "module": "/forms/controllers/type-form-checkbox.controller.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "typeFormSwitch",
          "declaration": {
            "name": "typeFormSwitch",
            "module": "/forms/controllers/type-form-switch.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "TypeFormSwitchController",
          "declaration": {
            "name": "TypeFormSwitchController",
            "module": "/forms/controllers/type-form-switch.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/forms/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/forms/field-message/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/forms/field-message/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Control Message\n\n```typescript\nimport '@blueprintui/components/include/forms.js';\n```\n\n```html\n<bp-field>\n  <label>Test</label>\n  <input type=\"text\" />\n  <bp-field-message>helper text</bp-field-message>\n</bp-field>\n```",
          "name": "BpFieldMessage",
          "cssProperties": [
            {
              "name": "--color"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--font-weight"
            },
            {
              "name": "--max-width"
            },
            {
              "name": "--min-width"
            }
          ],
          "slots": [
            {
              "description": "For projecting helper message text",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "HTML5 ValidityState https://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "'error' | 'success'"
              }
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "keyof ValidityState"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "HTML5 ValidityState https://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-field-message",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpFieldMessage",
          "declaration": {
            "name": "BpFieldMessage",
            "module": "/forms/field-message/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/forms/field/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/forms/field/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "\n```typescript\nimport '@blueprintui/components/include/forms.js';\n```\n\n```html\n<bp-field>\n  <label>field</label>\n  <input type=\"text\" />\n</bp-field>\n```",
          "name": "BpField",
          "cssProperties": [
            {
              "name": "--background"
            }
          ],
          "slots": [
            {}
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "attribute": "control-width",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "ControlLayout"
              },
              "default": "'vertical'"
            },
            {
              "kind": "field",
              "name": "controlWidth",
              "type": {
                "text": "'shrink'"
              }
            },
            {
              "kind": "field",
              "name": "inputControl",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#label",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#messages",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#datalist",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#isInline",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              },
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "fieldName": "accessor"
            },
            {
              "name": "control-width",
              "attribute": "accessor",
              "fieldName": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-field",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpField",
          "declaration": {
            "name": "BpField",
            "module": "/forms/field/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/forms/fieldset/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/forms/fieldset/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Control Group\n\n```typescript\nimport '@blueprintui/components/include/forms.js';\n```\n\n```html\n<bp-fieldset>\n  <label>...</label>\n\n  <label></label>\n  <input ... />\n\n  <label></label>\n  <input ... />\n</bp-fieldset>\n```",
          "name": "BpFieldset",
          "slots": [
            {}
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determine field layout",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "responsive",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "FormLayout"
              },
              "default": "'vertical'"
            },
            {
              "kind": "field",
              "name": "#inputs",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#labels",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#messages",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "inlineItems",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#isAssociatedGroup",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#isInlineGroup",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#updateAriaDescribedBy"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determine field layout",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-fieldset",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpFieldset",
          "declaration": {
            "name": "BpFieldset",
            "module": "/forms/fieldset/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/forms/form-control/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FormControl",
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines number of characters",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | number | FormData | File"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string."
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "valueAsNumber"
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true"
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "privacy": "protected",
              "default": "new TypeFormControlController<FormControl>(this)"
            },
            {
              "kind": "field",
              "name": "composedLabel",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "focus"
            },
            {
              "kind": "method",
              "name": "reset"
            },
            {
              "kind": "method",
              "name": "#setValue",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "config",
                  "default": "{ valueType: 'string' }"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onInput",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determines number of characters",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormControl",
          "declaration": {
            "name": "FormControl",
            "module": "/forms/form-control/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/forms/form-group/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/forms/form-group/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Form\n\n```typescript\nimport '@blueprintui/components/include/forms.js';\n```\n\n```html\n<bp-form-group layout=\"horizontal\">\n  <bp-input>\n    <label>Test</label>\n    <input type=\"text\" />\n  </bp-input>\n\n  <bp-input>\n    <label>Test</label>\n    <input type=\"text\" />\n  </bp-input>\n</bp-form-group>\n```",
          "name": "BpFormGroup",
          "cssProperties": [
            {
              "name": "--label-width"
            }
          ],
          "slots": [
            {
              "description": "For projecting input fields",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "-inline | vertical | vertical-inline | compact}",
              "type": {
                "text": "horizontal | horizontal"
              },
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "FormLayout"
              },
              "default": "'vertical'"
            },
            {
              "kind": "field",
              "name": "#fields",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#groups",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#observers",
              "privacy": "private",
              "type": {
                "text": "(MutationObserver | ResizeObserver)[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "#fieldsAndFieldsets",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#initialLayout",
              "privacy": "private",
              "type": {
                "text": "FormLayout"
              }
            },
            {
              "kind": "method",
              "name": "#setControlLabelWidths"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "-inline | vertical | vertical-inline | compact}",
              "type": {
                "text": "horizontal | horizontal"
              },
              "fieldName": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-form-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpFormGroup",
          "declaration": {
            "name": "BpFormGroup",
            "module": "/forms/form-group/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/forms/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./field/element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fieldset/element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./field-message/element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./form-group/element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./form-control/element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/validity.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/state-form-control.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/type-form-control.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/type-form-radio.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/type-form-checkbox.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/type-form-slider.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/type-form-switch.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/forms/utils/interfaces.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/forms/utils/utils.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "formLayouts",
          "type": {
            "text": "FormLayout[]"
          },
          "default": "['vertical', 'vertical-inline', 'horizontal', 'horizontal-inline', 'compact']"
        },
        {
          "kind": "function",
          "name": "updateFieldStatusState",
          "parameters": [
            {
              "name": "field",
              "type": {
                "text": "BpField"
              }
            },
            {
              "name": "messages",
              "type": {
                "text": "BpFieldMessage[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "syncValidationMessages",
          "parameters": [
            {
              "name": "field",
              "type": {
                "text": "BpField"
              }
            },
            {
              "name": "messages",
              "type": {
                "text": "BpFieldMessage[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "formLayouts",
          "declaration": {
            "name": "formLayouts",
            "module": "/forms/utils/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "updateFieldStatusState",
          "declaration": {
            "name": "updateFieldStatusState",
            "module": "/forms/utils/utils.js"
          }
        },
        {
          "kind": "js",
          "name": "syncValidationMessages",
          "declaration": {
            "name": "syncValidationMessages",
            "module": "/forms/utils/utils.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/forms/utils/validity.js",
      "declarations": [
        {
          "kind": "function",
          "name": "valueMissing",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "tooShort",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLInputElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "tooLong",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLInputElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "patternMismatch",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLInputElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "valueMissing",
          "declaration": {
            "name": "valueMissing",
            "module": "/forms/utils/validity.js"
          }
        },
        {
          "kind": "js",
          "name": "tooShort",
          "declaration": {
            "name": "tooShort",
            "module": "/forms/utils/validity.js"
          }
        },
        {
          "kind": "js",
          "name": "tooLong",
          "declaration": {
            "name": "tooLong",
            "module": "/forms/utils/validity.js"
          }
        },
        {
          "kind": "js",
          "name": "patternMismatch",
          "declaration": {
            "name": "patternMismatch",
            "module": "/forms/utils/validity.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/header/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/header/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/header.js';\n```\n\n```html\n<bp-header>\n  <bp-header-item>header</bp-header-item>\n</bp-header>\n```",
          "name": "BpHeader",
          "cssProperties": [
            {
              "name": "--padding"
            },
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--height"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--gap"
            }
          ],
          "slots": [
            {
              "description": "badge content",
              "name": ""
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpHeader",
          "declaration": {
            "name": "BpHeader",
            "module": "/header/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/header/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/header/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./item/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/header/item/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/header/item/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Header Item",
          "name": "BpHeaderItem",
          "slots": [
            {}
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines the current value",
              "attribute": "popovertarget",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "pressed",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetElement",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetAction",
              "type": {
                "text": "| 'toggle'\n    | 'show'\n    | 'hide'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popovertarget",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "HTMLFormElement"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAction",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formEnctype",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formMethod",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formNoValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formTarget",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "labels",
              "type": {
                "text": "NodeListOf<HTMLLabelElement>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validity",
              "type": {
                "text": "ValidityState"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "willValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "checkValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "reportValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "setCustomValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              },
              "readonly": true,
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseButton",
            "package": "@blueprintui/components/internals"
          },
          "tagName": "bp-header-item",
          "customElement": true,
          "attributes": [
            {
              "name": "accessor",
              "description": "determines the current value",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertargetaction",
              "description": "determines the current value",
              "attribute": "accessor",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertarget",
              "description": "determines the current value",
              "attribute": "popovertargetaction",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpHeaderItem",
          "declaration": {
            "name": "BpHeaderItem",
            "module": "/header/item/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/include/accordion.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/alert.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/all.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/badge.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/breadcrumb.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/button-expand.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/button-group.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/button-handle.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/button-icon-group.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/button-icon.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/button-resize.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/button-sort.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/button.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/card.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/chat.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/checkbox.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/color.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/date.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/dialog.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/divider.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/drawer.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/dropdown.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/file.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/format-datetime.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/format-number.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/forms.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/header.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/input.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/lazy.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "loader",
          "type": {
            "text": "object"
          },
          "default": "{\n  accordion: () => import('@blueprintui/components/include/accordion.js'),\n  alert: () => import('@blueprintui/components/include/alert.js'),\n  badge: () => import('@blueprintui/components/include/badge.js'),\n  breadcrumb: () => import('@blueprintui/components/include/breadcrumb.js'),\n  'button-expand': () => import('@blueprintui/components/include/button-expand.js'),\n  'button-group': () => import('@blueprintui/components/include/button-group.js'),\n  'button-handle': () => import('@blueprintui/components/include/button-handle.js'),\n  'button-icon-group': () => import('@blueprintui/components/include/button-icon-group.js'),\n  'button-icon': () => import('@blueprintui/components/include/button-icon.js'),\n  'button-sort': () => import('@blueprintui/components/include/button-sort.js'),\n  button: () => import('@blueprintui/components/include/button.js'),\n  card: () => import('@blueprintui/components/include/card.js'),\n  chat: () => import('@blueprintui/components/include/chat.js'),\n  checkbox: () => import('@blueprintui/components/include/checkbox.js'),\n  color: () => import('@blueprintui/components/include/color.js'),\n  date: () => import('@blueprintui/components/include/date.js'),\n  dialog: () => import('@blueprintui/components/include/dialog.js'),\n  divider: () => import('@blueprintui/components/include/divider.js'),\n  drawer: () => import('@blueprintui/components/include/drawer.js'),\n  dropdown: () => import('@blueprintui/components/include/dropdown.js'),\n  file: () => import('@blueprintui/components/include/file.js'),\n  forms: () => import('@blueprintui/components/include/forms.js'),\n  header: () => import('@blueprintui/components/include/header.js'),\n  icon: () => import('@blueprintui/icons/include.js'),\n  input: () => import('@blueprintui/components/include/input.js'),\n  menu: () => import('@blueprintui/components/include/menu.js'),\n  month: () => import('@blueprintui/components/include/month.js'),\n  nav: () => import('@blueprintui/components/include/nav.js'),\n  pagination: () => import('@blueprintui/components/include/pagination.js'),\n  password: () => import('@blueprintui/components/include/password.js'),\n  popover: () => import('@blueprintui/components/include/popover.js'),\n  'progress-bar': () => import('@blueprintui/components/include/progress-bar.js'),\n  'progress-circle': () => import('@blueprintui/components/include/progress-circle.js'),\n  'progress-dot': () => import('@blueprintui/components/include/progress-dot.js'),\n  radio: () => import('@blueprintui/components/include/radio.js'),\n  range: () => import('@blueprintui/components/include/range.js'),\n  rating: () => import('@blueprintui/components/include/rating.js'),\n  search: () => import('@blueprintui/components/include/search.js'),\n  select: () => import('@blueprintui/components/include/select.js'),\n  shell: () => import('@blueprintui/components/include/shell.js'),\n  stepper: () => import('@blueprintui/components/include/stepper.js'),\n  switch: () => import('@blueprintui/components/include/switch.js'),\n  tabs: () => import('@blueprintui/components/include/tabs.js'),\n  tag: () => import('@blueprintui/components/include/tag.js'),\n  textarea: () => import('@blueprintui/components/include/textarea.js'),\n  time: () => import('@blueprintui/components/include/time.js'),\n  toast: () => import('@blueprintui/components/include/toast.js'),\n  tooltip: () => import('@blueprintui/components/include/tooltip.js'),\n  tree: () => import('@blueprintui/components/include/tree.js')\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "loader",
          "declaration": {
            "name": "loader",
            "module": "/include/lazy.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/include/menu.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/month.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/nav.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/pagination.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/password.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/popover.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/progress-bar.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/progress-circle.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/progress-dot.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/radio.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/range.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/rating.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/search.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/select.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/shell.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/stepper.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/switch.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/tabs.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/tag.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/textarea.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/time.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/toast.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/tooltip.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/tree.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "version",
          "declaration": {
            "name": "version",
            "module": "./internals/utils/define.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/input/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/input/element.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "inputStyles",
          "default": "styles"
        },
        {
          "kind": "class",
          "description": "Input\n\n```typescript\nimport '@blueprintui/components/include/input.js';\n```\n\n```html\n<bp-control>\n  <label>input</label>\n  <bp-input></bp-input>\n  <bp-field-message>message text</bp-field-message>\n</bp-control>\n```",
          "name": "BpInput",
          "cssProperties": [
            {
              "name": "--background-size"
            },
            {
              "name": "--color"
            },
            {
              "name": "--background"
            },
            {
              "name": "--border"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--outline"
            },
            {
              "name": "--outline-offset"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--line-height"
            },
            {
              "name": "--height"
            },
            {
              "name": "--min-width"
            },
            {
              "name": "--width"
            },
            {
              "name": "--transition"
            },
            {
              "name": "--text-align"
            },
            {
              "name": "--cursor"
            }
          ],
          "slots": [
            {
              "description": "slot for prefix text or icons",
              "name": "prefix"
            },
            {
              "description": "slot for suffic text or icons",
              "name": "suffix"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines number of characters",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'text'",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | number | FormData | File"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "input",
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "showPicker",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "valueAsNumber",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "privacy": "protected",
              "default": "new TypeFormControlController<FormControl>(this)",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "composedLabel",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#setValue",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "config",
                  "default": "{ valueType: 'string' }"
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onInput",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "input"
            },
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determines number of characters",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "superclass": {
            "name": "FormControl",
            "package": "@blueprintui/components/forms"
          },
          "tagName": "bp-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "inputStyles",
          "declaration": {
            "name": "inputStyles",
            "module": "/input/element.js"
          }
        },
        {
          "kind": "js",
          "name": "BpInput",
          "declaration": {
            "name": "BpInput",
            "module": "/input/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/input/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/input/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/components/button.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BaseButton",
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines the current value",
              "attribute": "popovertarget",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pressed",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string."
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetElement",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetAction",
              "type": {
                "text": "| 'toggle'\n    | 'show'\n    | 'hide'"
              }
            },
            {
              "kind": "field",
              "name": "popovertarget",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "HTMLFormElement"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "formAction",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "formEnctype",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "formMethod",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "formNoValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "formTarget",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "labels",
              "type": {
                "text": "NodeListOf<HTMLLabelElement>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "validity",
              "type": {
                "text": "ValidityState"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "willValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "checkValidity",
              "type": {
                "text": "any"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "reportValidity",
              "type": {
                "text": "any"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "setCustomValidity",
              "type": {
                "text": "any"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              },
              "readonly": true,
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determines the current value",
              "fieldName": "accessor",
              "attribute": "accessor"
            },
            {
              "name": "popovertargetaction",
              "description": "determines the current value",
              "attribute": "accessor",
              "fieldName": "accessor"
            },
            {
              "name": "popovertarget",
              "description": "determines the current value",
              "attribute": "popovertargetaction",
              "fieldName": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BaseButton",
          "declaration": {
            "name": "BaseButton",
            "module": "/internals/components/button.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/dynamic-controllers.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "dynamicControllers",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for dynamically initializing controllers that are added to the static _controllers property of a given element",
          "name": "DynamicControllers",
          "members": [
            {
              "kind": "field",
              "name": "#instances",
              "privacy": "private",
              "default": "new Set<ConstructorTypeOf<ReactiveController>>()"
            },
            {
              "kind": "field",
              "name": "#hostConstructor",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#hostControllers",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "sync"
            },
            {
              "kind": "method",
              "name": "add",
              "static": true,
              "parameters": [
                {
                  "name": "hostClass",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "Controller",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "dynamicControllers",
          "declaration": {
            "name": "dynamicControllers",
            "module": "/internals/controllers/dynamic-controllers.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "DynamicControllers",
          "declaration": {
            "name": "DynamicControllers",
            "module": "/internals/controllers/dynamic-controllers.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/i18n.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "i18n",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          },
          "parameters": [
            {
              "name": "config",
              "type": {
                "text": "{ key: keyof I18nStrings }"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "Responsible for managing the internationalization (i18n) of a LitElement",
          "name": "I18nController",
          "members": [
            {
              "kind": "field",
              "name": "#i18n",
              "privacy": "private",
              "type": {
                "text": "object"
              },
              "default": "{}"
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "#updateProp"
            },
            {
              "kind": "field",
              "name": "#updates",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "#firstUpdated",
              "privacy": "private",
              "readonly": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "i18n",
          "declaration": {
            "name": "i18n",
            "module": "/internals/controllers/i18n.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "I18nController",
          "declaration": {
            "name": "I18nController",
            "module": "/internals/controllers/i18n.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/interaction-click.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "interactionClick",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for managing the click interaction of a LitElement\n- click event\n- space/enter keyup event\n- disabled state\n- readonly state\n- tabindex state",
          "name": "InteractionClickController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "field",
              "name": "#clickFn",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#keyUpFn",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#updateEventListeners"
            },
            {
              "kind": "method",
              "name": "#updateFocus"
            },
            {
              "kind": "method",
              "name": "#updateReadonly"
            },
            {
              "kind": "method",
              "name": "#click",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#keyup",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "interactionClick",
          "declaration": {
            "name": "interactionClick",
            "module": "/internals/controllers/interaction-click.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "InteractionClickController",
          "declaration": {
            "name": "InteractionClickController",
            "module": "/internals/controllers/interaction-click.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/interaction-close.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "interactionClose",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "responsible for managing the closable behavior of an element",
          "name": "InteractionCloseController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "close"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "interactionClose",
          "declaration": {
            "name": "interactionClose",
            "module": "/internals/controllers/interaction-close.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "InteractionCloseController",
          "declaration": {
            "name": "InteractionCloseController",
            "module": "/internals/controllers/interaction-close.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/interaction-expand.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "interactionExpand",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          },
          "parameters": [
            {
              "name": "fn",
              "optional": true,
              "type": {
                "text": "(host: T) => InteractionExpandConfig"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "InteractionExpandController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "toggle"
            },
            {
              "kind": "method",
              "name": "open"
            },
            {
              "kind": "method",
              "name": "close"
            },
            {
              "kind": "method",
              "name": "#setupKeynav"
            }
          ],
          "events": [
            {
              "name": "open"
            },
            {
              "description": "responsible for managing the closable behavior of an element",
              "name": "close"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "interactionExpand",
          "declaration": {
            "name": "interactionExpand",
            "module": "/internals/controllers/interaction-expand.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "InteractionExpandController",
          "declaration": {
            "name": "InteractionExpandController",
            "module": "/internals/controllers/interaction-expand.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/interaction-open.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "interactionOpen",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "responsible for managing the closable behavior of an element",
          "name": "InteractionOpenController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "open"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "interactionOpen",
          "declaration": {
            "name": "interactionOpen",
            "module": "/internals/controllers/interaction-open.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "InteractionOpenController",
          "declaration": {
            "name": "InteractionOpenController",
            "module": "/internals/controllers/interaction-open.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/interaction-range-selection.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "interactionRangeSelection",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          },
          "parameters": [
            {
              "name": "fn",
              "optional": true,
              "type": {
                "text": "(host: T) => InteractionRangeSelectionConfig"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "Responsible for handling range selection in a grid of elements",
          "name": "InteractionRangeSelectionController",
          "members": [
            {
              "kind": "field",
              "name": "#selectionActive",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "#firstCell",
              "privacy": "private",
              "type": {
                "text": "SelectionElement"
              }
            },
            {
              "kind": "field",
              "name": "#activeCell",
              "privacy": "private",
              "type": {
                "text": "SelectionElement"
              }
            },
            {
              "kind": "field",
              "name": "#config",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#cells",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#enabled",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "#setupMouseEvents"
            },
            {
              "kind": "method",
              "name": "#setupKeyboardListeners"
            },
            {
              "kind": "method",
              "name": "#setFirstCell",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#setActiveCell",
              "parameters": [
                {
                  "name": "activeCell",
                  "type": {
                    "text": "SelectionElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#stopSelection"
            },
            {
              "kind": "method",
              "name": "#resetAllActiveCells"
            },
            {
              "kind": "method",
              "name": "#calculateSelection"
            },
            {
              "kind": "method",
              "name": "#dispatchEvent",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#addHighlightOutline"
            },
            {
              "kind": "method",
              "name": "#hasHighlight",
              "parameters": [
                {
                  "name": "cell",
                  "type": {
                    "text": "HTMLElement & { _internals?: ElementInternals }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#addHighlight",
              "parameters": [
                {
                  "name": "cell",
                  "type": {
                    "text": "HTMLElement & { _internals?: ElementInternals }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#deleteHighlight",
              "parameters": [
                {
                  "name": "cell",
                  "type": {
                    "text": "HTMLElement & { _internals?: ElementInternals }"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "interactionRangeSelection",
          "declaration": {
            "name": "interactionRangeSelection",
            "module": "/internals/controllers/interaction-range-selection.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "InteractionRangeSelectionController",
          "declaration": {
            "name": "InteractionRangeSelectionController",
            "module": "/internals/controllers/interaction-range-selection.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/interaction-resize-context.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "resizeContext",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          },
          "parameters": [
            {
              "name": "fn",
              "optional": true,
              "type": {
                "text": "(host: T) => ResizeContextConfig"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "Responsible for managing the resizing of a LitElement",
          "name": "InteractionResizeContextController",
          "members": [
            {
              "kind": "field",
              "name": "#resizer",
              "privacy": "private",
              "type": {
                "text": "BpButtonResize"
              }
            },
            {
              "kind": "field",
              "name": "#minWidth",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "36"
            },
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "ResizeContextConfig"
              },
              "privacy": "protected",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "#resize",
              "parameters": [
                {
                  "name": "width",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resizeContext",
          "declaration": {
            "name": "resizeContext",
            "module": "/internals/controllers/interaction-resize-context.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "InteractionResizeContextController",
          "declaration": {
            "name": "InteractionResizeContextController",
            "module": "/internals/controllers/interaction-resize-context.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/interaction-responsive.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "interactionResponsive",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          },
          "parameters": [
            {
              "name": "config",
              "default": "{ skipFirst: false }",
              "type": {
                "text": "ResponsiveConfig"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "Responsible for managing the responsive behavior of a LitElement. Provides a `resize-layout` event when component dimensions are resized",
          "name": "InteractionResponsiveController",
          "members": [
            {
              "kind": "field",
              "name": "#observer",
              "privacy": "private",
              "type": {
                "text": "ResizeObserver"
              }
            },
            {
              "kind": "field",
              "name": "#resizeElement",
              "privacy": "private",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "#skipFirst",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "!!config.skipFirst"
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "interactionResponsive",
          "declaration": {
            "name": "interactionResponsive",
            "module": "/internals/controllers/interaction-responsive.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "InteractionResponsiveController",
          "declaration": {
            "name": "InteractionResponsiveController",
            "module": "/internals/controllers/interaction-responsive.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/interaction-select.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "interactionSelect",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "responsible for managing the closable behavior of an element",
          "name": "InteractionSelectController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "select"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "interactionSelect",
          "declaration": {
            "name": "interactionSelect",
            "module": "/internals/controllers/interaction-select.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "InteractionSelectController",
          "declaration": {
            "name": "InteractionSelectController",
            "module": "/internals/controllers/interaction-select.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/interaction-text-change.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "interactionTextChange",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for notifying of text node changes of a host element",
          "name": "InteractionTextChangeController",
          "members": [
            {
              "kind": "field",
              "name": "#observer",
              "privacy": "private",
              "type": {
                "text": "MutationObserver"
              }
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            },
            {
              "kind": "method",
              "name": "#dispatch"
            }
          ],
          "events": [
            {
              "name": "bp-textchange"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "interactionTextChange",
          "declaration": {
            "name": "interactionTextChange",
            "module": "/internals/controllers/interaction-text-change.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "InteractionTextChangeController",
          "declaration": {
            "name": "InteractionTextChangeController",
            "module": "/internals/controllers/interaction-text-change.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/interaction-touch.controller.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TouchCoordinate",
          "members": [
            {
              "kind": "field",
              "name": "x",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "y",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "offsetX",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "offsetY",
              "type": {
                "text": "number"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "interactionTouch",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for handling touch events on a LitElement",
          "name": "InteractionTouchController",
          "members": [
            {
              "kind": "field",
              "name": "#startPosition",
              "privacy": "private",
              "type": {
                "text": "{ x: number; y: number }"
              }
            },
            {
              "kind": "field",
              "name": "#moveHandler",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#endHandler",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "#start",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent & { path: HTMLElement[] }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#move",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#end",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "bp-touchstart"
            },
            {
              "name": "bp-touchmove"
            },
            {
              "name": "bp-touchend"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TouchCoordinate",
          "declaration": {
            "name": "TouchCoordinate",
            "module": "/internals/controllers/interaction-touch.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "interactionTouch",
          "declaration": {
            "name": "interactionTouch",
            "module": "/internals/controllers/interaction-touch.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "InteractionTouchController",
          "declaration": {
            "name": "InteractionTouchController",
            "module": "/internals/controllers/interaction-touch.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/state-active.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "stateActive",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for adding an --active state to an element when it is in an active state\nA shim fix for CSS psuedo-selector :active on keydown space/enter for custom elements",
          "name": "StateActiveController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "#emulateActive",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#emulateInactive"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stateActive",
          "declaration": {
            "name": "stateActive",
            "module": "/internals/controllers/state-active.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "StateActiveController",
          "declaration": {
            "name": "StateActiveController",
            "module": "/internals/controllers/state-active.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/state-checked.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "stateChecked",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for managing the aria-checked attribute and the --checked CSS state",
          "name": "StateCheckedController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stateChecked",
          "declaration": {
            "name": "stateChecked",
            "module": "/internals/controllers/state-checked.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "StateCheckedController",
          "declaration": {
            "name": "StateCheckedController",
            "module": "/internals/controllers/state-checked.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/state-direction.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "stateDirection",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for setting the direction CSS state of a LitElement based on the dir attribute of the host element or its parent elements.\nShim for CSS dir() behavior https://developer.mozilla.org/en-US/docs/Web/CSS/:dir",
          "name": "StateDirectionController",
          "members": [
            {
              "kind": "field",
              "name": "#observer",
              "privacy": "private",
              "type": {
                "text": "MutationObserver"
              }
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            },
            {
              "kind": "method",
              "name": "#updateState"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stateDirection",
          "declaration": {
            "name": "stateDirection",
            "module": "/internals/controllers/state-direction.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "StateDirectionController",
          "declaration": {
            "name": "StateDirectionController",
            "module": "/internals/controllers/state-direction.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/state-disabled.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "stateDisabled",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for managing the disabled state of a LitElement.\nProvides all nessesary aria-* attributes to create valid disabled state for interactive components.",
          "name": "StateDisabledController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stateDisabled",
          "declaration": {
            "name": "stateDisabled",
            "module": "/internals/controllers/state-disabled.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "StateDisabledController",
          "declaration": {
            "name": "StateDisabledController",
            "module": "/internals/controllers/state-disabled.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/state-expanded.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "stateExpanded",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for managing the aria-expanded attribute and the --expanded CSS state of a LitElement",
          "name": "StateExpandedController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stateExpanded",
          "declaration": {
            "name": "stateExpanded",
            "module": "/internals/controllers/state-expanded.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "StateExpandedController",
          "declaration": {
            "name": "StateExpandedController",
            "module": "/internals/controllers/state-expanded.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/state-pressed.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "statePressed",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for managing the aria-pressed attribute and the --pressed CSS state",
          "name": "StatePressedController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "statePressed",
          "declaration": {
            "name": "statePressed",
            "module": "/internals/controllers/state-pressed.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "StatePressedController",
          "declaration": {
            "name": "StatePressedController",
            "module": "/internals/controllers/state-pressed.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/state-readonly.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "stateReadonly",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for managing the --readonly CSS state",
          "name": "StateReadonlyController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stateReadonly",
          "declaration": {
            "name": "stateReadonly",
            "module": "/internals/controllers/state-readonly.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "StateReadonlyController",
          "declaration": {
            "name": "StateReadonlyController",
            "module": "/internals/controllers/state-readonly.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/state-scroll-lock.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "stateScrollLock",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for managing the scroll lock behavior of the body element when a element is hidden",
          "name": "StateScrollLockController",
          "members": [
            {
              "kind": "field",
              "name": "#observers",
              "privacy": "private",
              "type": {
                "text": "MutationObserver[]"
              },
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stateScrollLock",
          "declaration": {
            "name": "stateScrollLock",
            "module": "/internals/controllers/state-scroll-lock.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "StateScrollLockController",
          "declaration": {
            "name": "StateScrollLockController",
            "module": "/internals/controllers/state-scroll-lock.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/state-selected.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "stateSelected",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for managing the aria-selected attribute and the --selected CSS state of a element",
          "name": "StateSelectedController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stateSelected",
          "declaration": {
            "name": "stateSelected",
            "module": "/internals/controllers/state-selected.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "StateSelectedController",
          "declaration": {
            "name": "StateSelectedController",
            "module": "/internals/controllers/state-selected.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/state-text-content.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "stateTextContent",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for managing the `--text-content` CSS state based on the text content of the element",
          "name": "StateTextContentController",
          "members": [
            {
              "kind": "field",
              "name": "#observer",
              "privacy": "private",
              "type": {
                "text": "MutationObserver"
              }
            },
            {
              "kind": "field",
              "name": "#charCount",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            },
            {
              "kind": "method",
              "name": "#updateState"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stateTextContent",
          "declaration": {
            "name": "stateTextContent",
            "module": "/internals/controllers/state-text-content.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "StateTextContentController",
          "declaration": {
            "name": "StateTextContentController",
            "module": "/internals/controllers/state-text-content.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/type-anchor.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "typeAnchor",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for managing the behavior of a element that contains an anchor element",
          "name": "TypeAnchorController",
          "members": [
            {
              "kind": "field",
              "name": "#anchor",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hostConnected"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "typeAnchor",
          "declaration": {
            "name": "typeAnchor",
            "module": "/internals/controllers/type-anchor.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "TypeAnchorController",
          "declaration": {
            "name": "TypeAnchorController",
            "module": "/internals/controllers/type-anchor.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/type-button.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "typeButton",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for managing the behavior of a element that contains a button.\nProvides nessesary attributes for indicating a non-button element as an accessible button type.",
          "name": "TypeButtonController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "#updateEventListeners"
            },
            {
              "kind": "method",
              "name": "#updateRole"
            },
            {
              "kind": "method",
              "name": "#updateType"
            },
            {
              "kind": "field",
              "name": "#clickFn",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#click"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "typeButton",
          "declaration": {
            "name": "typeButton",
            "module": "/internals/controllers/type-button.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "TypeButtonController",
          "declaration": {
            "name": "TypeButtonController",
            "module": "/internals/controllers/type-button.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/type-group.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "typeGroup",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for setting the role attribute of an element to \"group\" to indicate that the element is a group of related elements",
          "name": "TypeGroupController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "typeGroup",
          "declaration": {
            "name": "typeGroup",
            "module": "/internals/controllers/type-group.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "TypeGroupController",
          "declaration": {
            "name": "TypeGroupController",
            "module": "/internals/controllers/type-group.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/type-menu.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "ariaMenu",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for setting the role attribute of an element to \"menu\" to indicate that the element is a menu",
          "name": "TypeMenuController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            }
          ]
        },
        {
          "kind": "function",
          "name": "ariaMenuItem",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for setting the role attribute of an element to \"menuitem\" to indicate that the element is a menu item",
          "name": "AriaMenuItemController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ariaMenu",
          "declaration": {
            "name": "ariaMenu",
            "module": "/internals/controllers/type-menu.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "TypeMenuController",
          "declaration": {
            "name": "TypeMenuController",
            "module": "/internals/controllers/type-menu.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "ariaMenuItem",
          "declaration": {
            "name": "ariaMenuItem",
            "module": "/internals/controllers/type-menu.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "AriaMenuItemController",
          "declaration": {
            "name": "AriaMenuItemController",
            "module": "/internals/controllers/type-menu.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/type-multiselectable.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "typeMultiSelectable",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for setting the ariaMultiSelectable attribute of an element to indicate whether the element supports multiple selections",
          "name": "TypeMultiSelectableController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "typeMultiSelectable",
          "declaration": {
            "name": "typeMultiSelectable",
            "module": "/internals/controllers/type-multiselectable.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "TypeMultiSelectableController",
          "declaration": {
            "name": "TypeMultiSelectableController",
            "module": "/internals/controllers/type-multiselectable.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/type-navigation.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "typeNavigation",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for setting the role attribute of an element to \"navigation\" to indicate that the element is a navigation landmark",
          "name": "TypeNavigationController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "typeNavigation",
          "declaration": {
            "name": "typeNavigation",
            "module": "/internals/controllers/type-navigation.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "TypeNavigationController",
          "declaration": {
            "name": "TypeNavigationController",
            "module": "/internals/controllers/type-navigation.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/type-popover-trigger.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "typePopoverTrigger",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          },
          "description": "Provides nessesary API for popover trigger types https://github.com/whatwg/html/issues/9110"
        },
        {
          "kind": "class",
          "description": "",
          "name": "TypePopoverTriggerController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "typePopoverTrigger",
          "declaration": {
            "name": "typePopoverTrigger",
            "module": "/internals/controllers/type-popover-trigger.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "TypePopoverTriggerController",
          "declaration": {
            "name": "TypePopoverTriggerController",
            "module": "/internals/controllers/type-popover-trigger.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/type-popover.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "typePopover",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          },
          "parameters": [
            {
              "name": "fn",
              "optional": true,
              "type": {
                "text": "(host: T) => PopoverControllerConfig"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "Provides nessesary API for popover types\nhttps://open-ui.org/components/popover.research.explainer#behaviors",
          "name": "TypePopoverController",
          "members": [
            {
              "kind": "field",
              "name": "#observers",
              "privacy": "private",
              "type": {
                "text": "MutationObserver[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "#config",
              "privacy": "private",
              "type": {
                "text": "PopoverControllerConfig"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#dialog",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#trigger",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            },
            {
              "kind": "method",
              "name": "#toggleLightDismiss"
            },
            {
              "kind": "field",
              "name": "#lightDismiss",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#listenForHiddenChange"
            },
            {
              "kind": "method",
              "name": "#listenForScroll"
            },
            {
              "kind": "method",
              "name": "#toggleDialog"
            },
            {
              "kind": "method",
              "name": "#setupTrigger"
            },
            {
              "kind": "method",
              "name": "close"
            },
            {
              "kind": "method",
              "name": "open"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "typePopover",
          "declaration": {
            "name": "typePopover",
            "module": "/internals/controllers/type-popover.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "TypePopoverController",
          "declaration": {
            "name": "TypePopoverController",
            "module": "/internals/controllers/type-popover.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/type-positioned.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "typePositioned",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          },
          "parameters": [
            {
              "name": "fn",
              "optional": true,
              "type": {
                "text": "(host: T) => TypePositionedConfig"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "Responsible for positioning a popover element relative to an anchor element",
          "name": "TypePositionedController",
          "members": [
            {
              "kind": "field",
              "name": "#subscription",
              "privacy": "private",
              "type": {
                "text": "() => void"
              }
            },
            {
              "kind": "field",
              "name": "#config",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#popover",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#anchor",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            },
            {
              "kind": "method",
              "name": "#computePosition"
            },
            {
              "kind": "method",
              "name": "#toggleScroll"
            },
            {
              "kind": "method",
              "name": "#setArrowPosition",
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "placement",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#getOffset"
            },
            {
              "kind": "method",
              "name": "#getBodyOffset"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "typePositioned",
          "declaration": {
            "name": "typePositioned",
            "module": "/internals/controllers/type-positioned.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "TypePositionedController",
          "declaration": {
            "name": "TypePositionedController",
            "module": "/internals/controllers/type-positioned.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/type-region.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "typeRegion",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          }
        },
        {
          "kind": "class",
          "description": "Responsible for setting the role attribute of an element to \"region\" to indicate that the element is a region landmark",
          "name": "TypeRegionController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "typeRegion",
          "declaration": {
            "name": "typeRegion",
            "module": "/internals/controllers/type-region.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "TypeRegionController",
          "declaration": {
            "name": "TypeRegionController",
            "module": "/internals/controllers/type-region.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./styles/styles.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./components/button.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/type-group.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/type-menu.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/type-multiselectable.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/type-navigation.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/type-region.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/dynamic-controllers.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/i18n.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/interaction-close.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/interaction-click.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/interaction-expand.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/interaction-open.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/interaction-range-selection.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/interaction-resize-context.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/interaction-responsive.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/interaction-select.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/interaction-text-change.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/interaction-touch.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/state-active.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/state-checked.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/state-direction.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/state-disabled.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/state-expanded.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/state-pressed.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/state-readonly.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/state-scroll-lock.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/state-selected.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/state-text-content.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/type-anchor.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/type-button.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/type-popover-trigger.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/type-popover.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/type-positioned.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./types/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./services/global.service.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./services/i18n.service.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/a11y.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/animation.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/array.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/define.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/event-subject.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/events.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/focus.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/i18n.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/responsive.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/time.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/traversal.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/services/global.service.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GlobalState",
          "members": [
            {
              "kind": "field",
              "name": "#stateUpdate",
              "privacy": "private",
              "default": "new BroadcastSubject<{ type: string; state: Partial<BpState> }>()"
            },
            {
              "kind": "field",
              "name": "#state",
              "privacy": "private",
              "type": {
                "text": "BpState"
              },
              "default": "{\n    environment: { production: false },\n    i18nRegistry: {},\n    elementRegistry: []\n  }"
            },
            {
              "kind": "field",
              "name": "stateUpdate",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "BpState"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "dispatch",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "state",
                  "type": {
                    "text": "Partial<BpState>"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "variable",
          "name": "GlobalStateService"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GlobalState",
          "declaration": {
            "name": "GlobalState",
            "module": "/internals/services/global.service.js"
          }
        },
        {
          "kind": "js",
          "name": "GlobalStateService",
          "declaration": {
            "name": "GlobalStateService",
            "module": "/internals/services/global.service.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/services/i18n.service.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i18nRegistry",
          "type": {
            "text": "I18nStrings"
          },
          "default": "{\n  actions: {\n    sort: 'sort',\n    none: 'none',\n    ascending: 'ascending',\n    descending: 'descending',\n    expand: 'expand',\n    close: 'close',\n    resize: 'resize',\n    filter: 'filter',\n    loading: 'loading',\n    show: 'show',\n    hide: 'hide',\n    previous: 'previous',\n    next: 'next',\n    first: 'first',\n    last: 'last',\n    today: 'today',\n    browse: 'browse',\n    removeFile: 'remove file',\n    files: 'files',\n    resizeColumn: 'resize column',\n    closeDetails: 'close details',\n    noData: 'no results found',\n    action: 'action',\n    dropTarget: 'drop item',\n    firstPage: 'go to first page',\n    previousPage: 'go to previous page',\n    nextPage: 'go to next page',\n    lastPage: 'go to last page',\n    pageSize: 'items per page'\n  }\n}"
        },
        {
          "kind": "class",
          "description": "",
          "name": "I18nService",
          "members": [
            {
              "kind": "field",
              "name": "keys",
              "type": {
                "text": "Readonly<I18nStrings>"
              },
              "static": true
            },
            {
              "kind": "field",
              "name": "keys",
              "static": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "i18nRegistry",
          "declaration": {
            "name": "i18nRegistry",
            "module": "/internals/services/i18n.service.js"
          }
        },
        {
          "kind": "js",
          "name": "I18nService",
          "declaration": {
            "name": "I18nService",
            "module": "/internals/services/i18n.service.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/styles/anchor-slot.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/internals/styles/base.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/internals/styles/indicator.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/internals/styles/interaction.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/internals/styles/styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "interactionStyles",
          "default": "_interactionStyles"
        },
        {
          "kind": "variable",
          "name": "baseStyles",
          "default": "_baseStyles"
        },
        {
          "kind": "variable",
          "name": "indicatorStyles",
          "default": "_indicatorStyles"
        },
        {
          "kind": "variable",
          "name": "anchorSlotStyles",
          "default": "_anchorSlotStyles"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "interactionStyles",
          "declaration": {
            "name": "interactionStyles",
            "module": "/internals/styles/styles.js"
          }
        },
        {
          "kind": "js",
          "name": "baseStyles",
          "declaration": {
            "name": "baseStyles",
            "module": "/internals/styles/styles.js"
          }
        },
        {
          "kind": "js",
          "name": "indicatorStyles",
          "declaration": {
            "name": "indicatorStyles",
            "module": "/internals/styles/styles.js"
          }
        },
        {
          "kind": "js",
          "name": "anchorSlotStyles",
          "declaration": {
            "name": "anchorSlotStyles",
            "module": "/internals/styles/styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/types/index.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/internals/utils/a11y.js",
      "declarations": [
        {
          "kind": "function",
          "name": "attachInternals",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement & { _internals?: ElementInternals }"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "associateAriaDescribedBy",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "descriptions",
              "type": {
                "text": "HTMLElement[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "associateInputAndLabel",
          "parameters": [
            {
              "name": "input",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "HTMLLabelElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "associateInputToDatalist",
          "parameters": [
            {
              "name": "input",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "name": "datalist",
              "type": {
                "text": "HTMLDataListElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "associateAriaLabel",
          "parameters": [
            {
              "name": "label",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "associateFieldNames",
          "parameters": [
            {
              "name": "inputs",
              "type": {
                "text": "HTMLInputElement[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "attachInternals",
          "declaration": {
            "name": "attachInternals",
            "module": "/internals/utils/a11y.js"
          }
        },
        {
          "kind": "js",
          "name": "associateAriaDescribedBy",
          "declaration": {
            "name": "associateAriaDescribedBy",
            "module": "/internals/utils/a11y.js"
          }
        },
        {
          "kind": "js",
          "name": "associateInputAndLabel",
          "declaration": {
            "name": "associateInputAndLabel",
            "module": "/internals/utils/a11y.js"
          }
        },
        {
          "kind": "js",
          "name": "associateInputToDatalist",
          "declaration": {
            "name": "associateInputToDatalist",
            "module": "/internals/utils/a11y.js"
          }
        },
        {
          "kind": "js",
          "name": "associateAriaLabel",
          "declaration": {
            "name": "associateAriaLabel",
            "module": "/internals/utils/a11y.js"
          }
        },
        {
          "kind": "js",
          "name": "associateFieldNames",
          "declaration": {
            "name": "associateFieldNames",
            "module": "/internals/utils/a11y.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/utils/animation.js",
      "declarations": [
        {
          "kind": "function",
          "name": "fade",
          "return": {
            "type": {
              "text": "DirectiveResult"
            }
          },
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fade",
          "declaration": {
            "name": "fade",
            "module": "/internals/utils/animation.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/utils/array.js",
      "declarations": [
        {
          "kind": "function",
          "name": "group",
          "parameters": [
            {
              "name": "array",
              "type": {
                "text": "any[]"
              }
            },
            {
              "name": "n",
              "type": {
                "text": "number"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "selectionStates",
          "parameters": [
            {
              "name": "items",
              "type": {
                "text": "{ selected: boolean }[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "group",
          "declaration": {
            "name": "group",
            "module": "/internals/utils/array.js"
          }
        },
        {
          "kind": "js",
          "name": "selectionStates",
          "declaration": {
            "name": "selectionStates",
            "module": "/internals/utils/array.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/utils/define.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "version",
          "type": {
            "text": "string"
          },
          "default": "'0.0.0'"
        },
        {
          "kind": "function",
          "name": "defineElement",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "element",
              "type": {
                "text": "typeof HTMLElement & { __meta?: ElementMetadata }"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "version",
          "declaration": {
            "name": "version",
            "module": "/internals/utils/define.js"
          }
        },
        {
          "kind": "js",
          "name": "defineElement",
          "declaration": {
            "name": "defineElement",
            "module": "/internals/utils/define.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "name",
          "declaration": {
            "name": "element",
            "module": "/internals/utils/define.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/utils/dom.js",
      "declarations": [
        {
          "kind": "function",
          "name": "attachRootNodeStyles",
          "parameters": [
            {
              "name": "host",
              "type": {
                "text": "HTMLElement | Element | ParentNode"
              }
            },
            {
              "name": "styles",
              "type": {
                "text": "CSSStyleSheet[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "toggleState",
          "parameters": [
            {
              "name": "internals",
              "type": {
                "text": "ElementInternals"
              }
            },
            {
              "name": "state",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getRenderRoot",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            }
          ],
          "description": "Get host render root for a given element. This may be the document or the nearest shadow root."
        },
        {
          "kind": "function",
          "name": "querySelectorByIdRef",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "idRef",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getOffesetDifference",
          "parameters": [
            {
              "name": "min",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "end",
              "type": {
                "text": "number"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "assignedElements",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "config",
              "default": "{ flatten: false }",
              "type": {
                "text": "{ name?: string; flatten?: boolean }"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "attachRootNodeStyles",
          "declaration": {
            "name": "attachRootNodeStyles",
            "module": "/internals/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "toggleState",
          "declaration": {
            "name": "toggleState",
            "module": "/internals/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "getRenderRoot",
          "declaration": {
            "name": "getRenderRoot",
            "module": "/internals/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "querySelectorByIdRef",
          "declaration": {
            "name": "querySelectorByIdRef",
            "module": "/internals/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "getOffesetDifference",
          "declaration": {
            "name": "getOffesetDifference",
            "module": "/internals/utils/dom.js"
          }
        },
        {
          "kind": "js",
          "name": "assignedElements",
          "declaration": {
            "name": "assignedElements",
            "module": "/internals/utils/dom.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/utils/event-subject.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BroadcastSubscription",
          "members": [
            {
              "kind": "field",
              "name": "#channel",
              "privacy": "private",
              "type": {
                "text": "BroadcastChannel"
              },
              "default": "new BroadcastChannel(channelId)"
            },
            {
              "kind": "method",
              "name": "unsubscribe"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "BroadcastSubject",
          "members": [
            {
              "kind": "field",
              "name": "#id",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#channel",
              "privacy": "private",
              "type": {
                "text": "BroadcastChannel"
              },
              "default": "new BroadcastChannel(this.#id)"
            },
            {
              "kind": "method",
              "name": "subscribe",
              "parameters": [
                {
                  "name": "fn",
                  "type": {
                    "text": "(value: T) => void"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "emit",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "T"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toEventObservable"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BroadcastSubscription",
          "declaration": {
            "name": "BroadcastSubscription",
            "module": "/internals/utils/event-subject.js"
          }
        },
        {
          "kind": "js",
          "name": "BroadcastSubject",
          "declaration": {
            "name": "BroadcastSubject",
            "module": "/internals/utils/event-subject.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/utils/events.js",
      "declarations": [
        {
          "kind": "function",
          "name": "createCustomEvent",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "options",
              "default": "{}",
              "type": {
                "text": "CustomEventInit"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "stopEvent",
          "parameters": [
            {
              "name": "event",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "onKeys",
          "parameters": [
            {
              "name": "events",
              "type": {
                "text": "string[]"
              }
            },
            {
              "name": "event",
              "type": {
                "text": "KeyboardEvent"
              }
            },
            {
              "name": "fn",
              "type": {
                "text": "() => any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getElementUpdates",
          "return": {
            "type": {
              "text": "MutationObserver"
            }
          },
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "propertyKey",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "fn",
              "type": {
                "text": "(value: any) => void"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "listenForAttributeChange",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "attrName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "fn",
              "type": {
                "text": "(attrValue: string | null) => void"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "listenForAttributeListChange",
          "return": {
            "type": {
              "text": "MutationObserver"
            }
          },
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "attrNames",
              "type": {
                "text": "string[]"
              }
            },
            {
              "name": "fn",
              "type": {
                "text": "(mutation: MutationRecord) => void"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "onFirstInteraction",
          "return": {
            "type": {
              "text": "Promise<null>"
            }
          },
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "createCustomEvent",
          "declaration": {
            "name": "createCustomEvent",
            "module": "/internals/utils/events.js"
          }
        },
        {
          "kind": "js",
          "name": "stopEvent",
          "declaration": {
            "name": "stopEvent",
            "module": "/internals/utils/events.js"
          }
        },
        {
          "kind": "js",
          "name": "onKeys",
          "declaration": {
            "name": "onKeys",
            "module": "/internals/utils/events.js"
          }
        },
        {
          "kind": "js",
          "name": "getElementUpdates",
          "declaration": {
            "name": "getElementUpdates",
            "module": "/internals/utils/events.js"
          }
        },
        {
          "kind": "js",
          "name": "listenForAttributeChange",
          "declaration": {
            "name": "listenForAttributeChange",
            "module": "/internals/utils/events.js"
          }
        },
        {
          "kind": "js",
          "name": "listenForAttributeListChange",
          "declaration": {
            "name": "listenForAttributeListChange",
            "module": "/internals/utils/events.js"
          }
        },
        {
          "kind": "js",
          "name": "onFirstInteraction",
          "declaration": {
            "name": "onFirstInteraction",
            "module": "/internals/utils/events.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/utils/focus.js",
      "declarations": [
        {
          "kind": "function",
          "name": "createFocusTrap",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getFlattenedFocusableItems",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "Node"
              }
            },
            {
              "name": "depth",
              "default": "10"
            }
          ]
        },
        {
          "kind": "function",
          "name": "focusable",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "Element"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "createFocusTrap",
          "declaration": {
            "name": "createFocusTrap",
            "module": "/internals/utils/focus.js"
          }
        },
        {
          "kind": "js",
          "name": "getFlattenedFocusableItems",
          "declaration": {
            "name": "getFlattenedFocusableItems",
            "module": "/internals/utils/focus.js"
          }
        },
        {
          "kind": "js",
          "name": "focusable",
          "declaration": {
            "name": "focusable",
            "module": "/internals/utils/focus.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/utils/i18n.js",
      "declarations": [
        {
          "kind": "function",
          "name": "matchInterpolate",
          "parameters": [
            {
              "name": "template",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "obj",
              "default": "{}",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getElementLanguageDirection",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "matchInterpolate",
          "declaration": {
            "name": "matchInterpolate",
            "module": "/internals/utils/i18n.js"
          }
        },
        {
          "kind": "js",
          "name": "getElementLanguageDirection",
          "declaration": {
            "name": "getElementLanguageDirection",
            "module": "/internals/utils/i18n.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/utils/responsive.js",
      "declarations": [
        {
          "kind": "function",
          "name": "elementVisible",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "fn",
              "type": {
                "text": "() => void"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "elementResize",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "fn",
              "type": {
                "text": "() => void"
              }
            },
            {
              "name": "async",
              "default": "true"
            }
          ]
        },
        {
          "kind": "function",
          "name": "calculateOptimalLayout",
          "return": {
            "type": {
              "text": "Promise<boolean>"
            }
          },
          "parameters": [
            {
              "name": "component",
              "type": {
                "text": "ResponsiveComponent"
              }
            },
            {
              "name": "layoutConfig",
              "type": {
                "text": "LayoutConfig"
              }
            }
          ],
          "description": "This function loops through a list of layout options and changes the layout\nof ResponsiveComponent until the component layout condition is met."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "elementVisible",
          "declaration": {
            "name": "elementVisible",
            "module": "/internals/utils/responsive.js"
          }
        },
        {
          "kind": "js",
          "name": "elementResize",
          "declaration": {
            "name": "elementResize",
            "module": "/internals/utils/responsive.js"
          }
        },
        {
          "kind": "js",
          "name": "calculateOptimalLayout",
          "declaration": {
            "name": "calculateOptimalLayout",
            "module": "/internals/utils/responsive.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/utils/string.js",
      "declarations": [
        {
          "kind": "function",
          "name": "camelCaseToKebabCase",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isNumericString",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "createId",
          "parameters": [
            {
              "name": "prefix",
              "default": "'_'"
            }
          ]
        },
        {
          "kind": "function",
          "name": "getFromObjectPath",
          "parameters": [
            {
              "name": "path",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "dataObj",
              "type": {
                "text": "any"
              }
            },
            {
              "name": "fallback",
              "default": "`$\\{${path}}`"
            }
          ]
        },
        {
          "kind": "function",
          "name": "rgbToHex",
          "parameters": [
            {
              "name": "red",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "green",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "blue",
              "type": {
                "text": "number"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "parseMinimumTouchWidth",
          "parameters": [
            {
              "name": "width",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "camelCaseToKebabCase",
          "declaration": {
            "name": "camelCaseToKebabCase",
            "module": "/internals/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "isNumericString",
          "declaration": {
            "name": "isNumericString",
            "module": "/internals/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "createId",
          "declaration": {
            "name": "createId",
            "module": "/internals/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "getFromObjectPath",
          "declaration": {
            "name": "getFromObjectPath",
            "module": "/internals/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "rgbToHex",
          "declaration": {
            "name": "rgbToHex",
            "module": "/internals/utils/string.js"
          }
        },
        {
          "kind": "js",
          "name": "parseMinimumTouchWidth",
          "declaration": {
            "name": "parseMinimumTouchWidth",
            "module": "/internals/utils/string.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/utils/time.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getMonths",
          "parameters": [
            {
              "name": "format",
              "default": "'long'",
              "type": {
                "text": "'long' | 'numeric' | '2-digit' | 'short' | 'narrow'"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getYearSelection",
          "parameters": [
            {
              "name": "year",
              "type": {
                "text": "number"
              }
            }
          ],
          "description": "returns next decade of the given year"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getMonths",
          "declaration": {
            "name": "getMonths",
            "module": "/internals/utils/time.js"
          }
        },
        {
          "kind": "js",
          "name": "getYearSelection",
          "declaration": {
            "name": "getYearSelection",
            "module": "/internals/utils/time.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/utils/traversal.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getParents",
          "return": {
            "type": {
              "text": "HTMLElement[]"
            }
          },
          "parameters": [
            {
              "name": "node",
              "type": {
                "text": "Node"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getFlattenedDOMTree",
          "return": {
            "type": {
              "text": "HTMLElement[]"
            }
          },
          "parameters": [
            {
              "name": "node",
              "type": {
                "text": "Node"
              }
            },
            {
              "name": "depth",
              "default": "10"
            }
          ]
        },
        {
          "kind": "function",
          "name": "getChildren",
          "parameters": [
            {
              "name": "node",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isObject",
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "mergeObjects",
          "return": {
            "type": {
              "text": "object"
            }
          },
          "parameters": [
            {
              "name": "objs",
              "type": {
                "text": "object[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getParents",
          "declaration": {
            "name": "getParents",
            "module": "/internals/utils/traversal.js"
          }
        },
        {
          "kind": "js",
          "name": "getFlattenedDOMTree",
          "declaration": {
            "name": "getFlattenedDOMTree",
            "module": "/internals/utils/traversal.js"
          }
        },
        {
          "kind": "js",
          "name": "getChildren",
          "declaration": {
            "name": "getChildren",
            "module": "/internals/utils/traversal.js"
          }
        },
        {
          "kind": "js",
          "name": "isObject",
          "declaration": {
            "name": "isObject",
            "module": "/internals/utils/traversal.js"
          }
        },
        {
          "kind": "js",
          "name": "mergeObjects",
          "declaration": {
            "name": "mergeObjects",
            "module": "/internals/utils/traversal.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/menu/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/menu/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Menu\n\n```typescript\nimport '@blueprintui/components/include/menu.js';\n```\n\n```html\n<bp-menu>\n\n</bp-menu>\n```",
          "name": "BpMenu",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--width"
            }
          ],
          "slots": [
            {
              "description": "content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "items",
              "readonly": true
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-menu",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpMenu",
          "declaration": {
            "name": "BpMenu",
            "module": "/menu/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/menu/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/menu/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./item/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/menu/item/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/menu/item/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Menu Item",
          "name": "BpMenuItem",
          "cssProperties": [
            {
              "name": "--bp-interaction-outline-offset"
            },
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--border"
            },
            {
              "name": "--border-inline"
            },
            {
              "name": "--border-inline-start"
            }
          ],
          "slots": [
            {
              "description": "content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines the current value",
              "attribute": "popovertarget",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "pressed",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetElement",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetAction",
              "type": {
                "text": "| 'toggle'\n    | 'show'\n    | 'hide'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popovertarget",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "HTMLFormElement"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAction",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formEnctype",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formMethod",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formNoValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formTarget",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "labels",
              "type": {
                "text": "NodeListOf<HTMLLabelElement>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validity",
              "type": {
                "text": "ValidityState"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "willValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "checkValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "reportValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "setCustomValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              },
              "readonly": true,
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseButton",
            "package": "@blueprintui/components/internals"
          },
          "tagName": "bp-menu-item",
          "customElement": true,
          "attributes": [
            {
              "name": "accessor",
              "description": "determines the current value",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertargetaction",
              "description": "determines the current value",
              "attribute": "accessor",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertarget",
              "description": "determines the current value",
              "attribute": "popovertargetaction",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpMenuItem",
          "declaration": {
            "name": "BpMenuItem",
            "module": "/menu/item/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/month/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/month/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Month Input\n\n```typescript\nimport '@blueprintui/components/include/month.js';\n```\n\n```html\n<bp-field>\n  <label>time</label>\n  <bp-month></bp-month>\n  <bp-field-message>message text</bp-field-message>\n</bp-field>\n```",
          "name": "BpMonth",
          "slots": [
            {
              "description": "slot for prefix text or icons",
              "name": "prefix"
            },
            {
              "description": "slot for suffic text or icons",
              "name": "suffix"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines number of characters",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'month'",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | number | FormData | File"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "method",
              "name": "showPicker",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "valueAsNumber",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "privacy": "protected",
              "default": "new TypeFormControlController<FormControl>(this)",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "composedLabel",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#setValue",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "config",
                  "default": "{ valueType: 'string' }"
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onInput",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "input",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determines number of characters",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "superclass": {
            "name": "BpInput",
            "package": "@blueprintui/components/input"
          },
          "tagName": "bp-month",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpMonth",
          "declaration": {
            "name": "BpMonth",
            "module": "/month/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/month/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/month/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/nav/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/nav/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/nav.js';\n```\n\n```html\n<bp-nav></bp-nav>\n```",
          "name": "BpNav",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--width"
            },
            {
              "name": "--height"
            },
            {
              "name": "--max-height"
            }
          ],
          "slots": [
            {
              "description": "content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determine if element should auto manage expanded state",
              "attribute": "accessor"
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "interaction",
              "type": {
                "text": "'auto'"
              }
            },
            {
              "kind": "field",
              "name": "focusItems",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#items",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#groups",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "interactionExpandController",
              "type": {
                "text": "InteractionExpandController<this>"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#syncInteractions"
            },
            {
              "kind": "method",
              "name": "#change"
            },
            {
              "kind": "method",
              "name": "#setupScrollPositioning"
            }
          ],
          "events": [
            {
              "name": "open"
            },
            {
              "name": "close"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determine if element should auto manage expanded state",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-nav",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpNav",
          "declaration": {
            "name": "BpNav",
            "module": "/nav/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/nav/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/nav/group/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/nav/group/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Button\n\n```typescript\nimport '@blueprintui/components/include/nav.js';\n```\n\n```html\n<bp-nav-group>submit</bp-nav-group>\n```",
          "name": "BpNavGroup",
          "slots": [
            {
              "description": "bp-nav-item elements",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determine if element should auto manage expanded state",
              "attribute": "accessor"
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "interaction",
              "type": {
                "text": "'auto'"
              }
            },
            {
              "kind": "field",
              "name": "#items",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "interactionExpandController",
              "type": {
                "text": "InteractionExpandController<this>"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#toggle"
            },
            {
              "kind": "method",
              "name": "#updateItems"
            }
          ],
          "events": [
            {
              "description": "when element is expanded",
              "name": "open"
            },
            {
              "description": "when element is collapsed",
              "name": "close"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determine if element should auto manage expanded state",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-nav-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpNavGroup",
          "declaration": {
            "name": "BpNavGroup",
            "module": "/nav/group/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/nav/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./item/element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./group/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/nav/item/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/nav/item/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Nav Item",
          "name": "BpNavItem",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--border"
            },
            {
              "name": "--border-left"
            }
          ],
          "slots": [
            {
              "description": "content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#icons",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#updateSlots"
            },
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines the current value",
              "attribute": "popovertarget",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "pressed",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetElement",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetAction",
              "type": {
                "text": "| 'toggle'\n    | 'show'\n    | 'hide'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popovertarget",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "HTMLFormElement"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAction",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formEnctype",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formMethod",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formNoValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formTarget",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "labels",
              "type": {
                "text": "NodeListOf<HTMLLabelElement>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validity",
              "type": {
                "text": "ValidityState"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "willValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "checkValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "reportValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "setCustomValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              },
              "readonly": true,
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseButton",
            "package": "@blueprintui/components/internals"
          },
          "tagName": "bp-nav-item",
          "customElement": true,
          "attributes": [
            {
              "name": "accessor",
              "description": "determines the current value",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertargetaction",
              "description": "determines the current value",
              "attribute": "accessor",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertarget",
              "description": "determines the current value",
              "attribute": "popovertargetaction",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpNavItem",
          "declaration": {
            "name": "BpNavItem",
            "module": "/nav/item/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/pagination/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/pagination/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Pagination\n\n```typescript\nimport '@blueprintui/components/include/pagination.js';\n```\n\n```html\n<bp-pagination>\n  <bp-pagination-button action=\"first\" disabled></bp-pagination-button>\n  <bp-pagination-button action=\"prev\" disabled></bp-pagination-button>\n  <span aria-label=\"current page\">1 / 3</span>\n  <bp-pagination-button action=\"next\"></bp-pagination-button>\n  <bp-pagination-button action=\"last\"></bp-pagination-button>\n</bp-pagination>\n```",
          "name": "BpPagination",
          "cssProperties": [
            {
              "name": "--gap"
            }
          ],
          "slots": [
            {},
            {
              "name": "first"
            },
            {
              "name": "next"
            },
            {
              "name": "prev"
            },
            {
              "name": "last"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "attribute": "accessor"
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "#field",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#setupButtons"
            },
            {
              "kind": "method",
              "name": "#setupField"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "fieldName": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-pagination",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpPagination",
          "declaration": {
            "name": "BpPagination",
            "module": "/pagination/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/pagination/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/pagination/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./input/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/pagination/input/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/pagination/input/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Grid Pagination\n\n```typescript\nimport '@blueprintui/components/include/pagination.js';\n```\n\n```html\n<form>\n  <bp-pagination-input name=\"pagination\" value=\"1\" max=\"500\" size=\"10\" size-options=\"[10, 50, 100]\"></bp-pagination-input>\n</form>\n```",
          "name": "BpPaginationInput",
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "determines if element is mutable or focusable",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "attribute": "accessor"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              },
              "default": "1"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "default": "1"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "10"
            },
            {
              "kind": "field",
              "name": "sizeOptions",
              "type": {
                "text": "number[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true"
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            },
            {
              "kind": "method",
              "name": "#setPage",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#nextPage"
            },
            {
              "kind": "method",
              "name": "#prevPage"
            },
            {
              "kind": "method",
              "name": "#firstPage"
            },
            {
              "kind": "method",
              "name": "#lastPage"
            },
            {
              "kind": "method",
              "name": "#pageChange",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#sizeChange",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "input",
              "type": {
                "text": "Event"
              }
            },
            {
              "name": "change",
              "type": {
                "text": "Event"
              }
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "determines if element is mutable or focusable",
              "fieldName": "disabled"
            },
            {
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "fieldName": "accessor",
              "attribute": "size-options"
            },
            {
              "name": "size-options",
              "description": "set default aria/i18n strings",
              "attribute": "accessor",
              "fieldName": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-pagination-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpPaginationInput",
          "declaration": {
            "name": "BpPaginationInput",
            "module": "/pagination/input/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/password/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/password/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Password\n\n```typescript\nimport '@blueprintui/components/include/password.js';\n```\n\n```html\n<bp-field>\n  <label>password</label>\n  <bp-password></bp-password>\n  <bp-field-message>message text</bp-field-message>\n</bp-field>\n```",
          "name": "BpPassword",
          "slots": [
            {
              "description": "slot for prefix text or icons",
              "name": "prefix"
            },
            {
              "description": "slot for suffic text or icons",
              "name": "suffix"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'password'",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "showPassword",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#togglePasswordVisibility"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | number | FormData | File"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "method",
              "name": "showPicker",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "valueAsNumber",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "privacy": "protected",
              "default": "new TypeFormControlController<FormControl>(this)",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "composedLabel",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#setValue",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "config",
                  "default": "{ valueType: 'string' }"
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onInput",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "input",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "superclass": {
            "name": "BpInput",
            "package": "@blueprintui/components/input"
          },
          "tagName": "bp-password",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpPassword",
          "declaration": {
            "name": "BpPassword",
            "module": "/password/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/password/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/password/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/popover/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/popover/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/popover.js';\n```\n\n```html\n<bp-popover>\n\n</bp-popover>\n```",
          "name": "BpPopover",
          "cssProperties": [
            {
              "name": "--padding"
            },
            {
              "name": "--filter"
            },
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--width"
            },
            {
              "name": "--height"
            },
            {
              "name": "--min-width"
            },
            {
              "name": "--min-height"
            },
            {
              "name": "--font-size"
            }
          ],
          "slots": [
            {
              "description": "content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "Position"
              },
              "default": "'bottom'"
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "HTMLElement | string"
              }
            },
            {
              "kind": "field",
              "name": "trigger",
              "type": {
                "text": "HTMLElement | string"
              }
            },
            {
              "kind": "field",
              "name": "modal",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "focusTrap",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "arrow",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "typePopoverController",
              "type": {
                "text": "TypePopoverController<this>"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "#close"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-popover",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpPopover",
          "declaration": {
            "name": "BpPopover",
            "module": "/popover/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/popover/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/progress-bar/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/progress-bar/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/progress-bar.js';\n```\n\n```html\n<bp-progress-bar value=\"75\"></bp-progress-bar>\n```",
          "name": "BpProgressBar",
          "cssProperties": [
            {
              "name": "--color"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determine the visual status state",
              "attribute": "accessor"
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "default": "100"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number | null | undefined"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "'accent' | 'success' | 'warning' | 'danger'"
              }
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            },
            {
              "kind": "method",
              "name": "#updateAria"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determine the visual status state",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-progress-bar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpProgressBar",
          "declaration": {
            "name": "BpProgressBar",
            "module": "/progress-bar/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/progress-bar/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/progress-bar/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/progress-circle/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/progress-circle/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/progress-circle.js';\n```\n\n```html\n<bp-progress-circle value=\"75\"></bp-progress-circle>\n```",
          "name": "BpProgressCircle",
          "cssProperties": [
            {
              "name": "--ring-opacity"
            },
            {
              "name": "--ring-color"
            },
            {
              "name": "--fill-color"
            },
            {
              "name": "--fill-speed"
            },
            {
              "name": "--size"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determine the visual status state",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "'accent' | 'success' | 'warning' | 'danger'"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "line",
              "type": {
                "text": "number"
              },
              "default": "3"
            },
            {
              "kind": "field",
              "name": "#size",
              "privacy": "private",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "#radius",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#circumference",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#progress",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#progressOffset",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            },
            {
              "kind": "method",
              "name": "#updateAria"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determine the visual status state",
              "fieldName": "accessor",
              "attribute": "accessor"
            },
            {
              "name": "size",
              "type": {
                "text": "string"
              },
              "fieldName": "size"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-progress-circle",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpProgressCircle",
          "declaration": {
            "name": "BpProgressCircle",
            "module": "/progress-circle/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/progress-circle/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/progress-circle/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/progress-dot/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/progress-dot/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/progress-dot.js';\n```\n\n```html\n<bp-progress-dot></bp-progress-dot>\n```",
          "name": "BpProgressDot",
          "cssProperties": [
            {
              "name": "--color"
            },
            {
              "name": "--width"
            },
            {
              "name": "--height"
            },
            {
              "name": "--animation-duration"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'sm' | 'lg'"
              }
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-progress-dot",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpProgressDot",
          "declaration": {
            "name": "BpProgressDot",
            "module": "/progress-dot/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/progress-dot/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/progress-dot/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/radio/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/radio/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/radio.js';\n```\n\n```html\n<bp-fieldset>\n  <label>label</label>\n\n  <label>radio 1</label>\n  <bp-radio value=\"1\" checked></bp-radio>\n\n  <label>radio 2</label>\n  <bp-radio value=\"2\"></bp-radio>\n\n  <label>radio 3</label>\n  <bp-radio value=\"3\"></bp-radio>\n\n  <bp-field-message>message text</bp-field-message>\n</bp-fieldset>\n```",
          "name": "BpRadio",
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines whether element is checked",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | number | FormData | File"
              },
              "default": "'on'",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "valueAsNumber",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "privacy": "protected",
              "default": "new TypeFormControlController<FormControl>(this)",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "composedLabel",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#setValue",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "config",
                  "default": "{ valueType: 'string' }"
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onInput",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determines whether element is checked",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "superclass": {
            "name": "FormControl",
            "package": "@blueprintui/components/forms"
          },
          "tagName": "bp-radio",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpRadio",
          "declaration": {
            "name": "BpRadio",
            "module": "/radio/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/radio/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/radio/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/range/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/range/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Range\n\n```typescript\nimport '@blueprintui/components/include/range.js';\n```\n\n```html\n<bp-field>\n  <label>range</label>\n  <bp-range></bp-range>\n  <bp-field-message>message text</bp-field-message>\n</bp-field>\n```",
          "name": "BpRange",
          "cssProperties": [
            {
              "name": "--accent-color"
            },
            {
              "name": "--height"
            }
          ],
          "slots": [
            {
              "description": "slot for prefix text or icons",
              "name": "prefix"
            },
            {
              "description": "slot for suffic text or icons",
              "name": "suffix"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "number that specifies the granularity that the value",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | number | FormData | File"
              },
              "default": "50",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number"
              },
              "default": "1"
            },
            {
              "kind": "method",
              "name": "#onChange",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onInput",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "valueAsNumber",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "privacy": "protected",
              "default": "new TypeFormControlController<FormControl>(this)",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "composedLabel",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#setValue",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "config",
                  "default": "{ valueType: 'string' }"
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onInput",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "input"
            },
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "number that specifies the granularity that the value",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "superclass": {
            "name": "FormControl",
            "package": "@blueprintui/components/forms"
          },
          "tagName": "bp-range",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpRange",
          "declaration": {
            "name": "BpRange",
            "module": "/range/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/range/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/range/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/rating/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/rating/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/rating.js';\n```\n\n```html\n<bp-field>\n  <label>rating</label>\n  <bp-rating min=\"0\" max=\"5\" value=\"3\" step=\"1\"></bp-rating>\n</bp-field>\n```",
          "name": "BpRating",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--selected-background"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "accessor",
              "description": "defines the greatest value in the range of permitted values",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | number | FormData | File"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "default": "5",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "#range",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#icons",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#mouseenter",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#mouseleave"
            },
            {
              "kind": "method",
              "name": "#click",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onChange",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onInput",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#select",
              "parameters": [
                {
                  "name": "i",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#updateIcons",
              "parameters": [
                {
                  "name": "i",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "valueAsNumber",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "privacy": "protected",
              "default": "new TypeFormControlController<FormControl>(this)",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "composedLabel",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#setValue",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "config",
                  "default": "{ valueType: 'string' }"
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onInput",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "input"
            },
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "defines the greatest value in the range of permitted values",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "superclass": {
            "name": "FormControl",
            "package": "@blueprintui/components/forms"
          },
          "tagName": "bp-rating",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpRating",
          "declaration": {
            "name": "BpRating",
            "module": "/rating/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/rating/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/rating/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/search/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/search/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Search Input\n\n```typescript\nimport '@blueprintui/components/include/time.js';\n```\n\n```html\n<bp-field>\n  <label>search</label>\n  <bp-search></bp-search>\n  <bp-field-message>message text</bp-field-message>\n</bp-field>\n```",
          "name": "BpSearch",
          "slots": [
            {
              "description": "slot for prefix text or icons",
              "name": "prefix"
            },
            {
              "description": "slot for suffic text or icons",
              "name": "suffix"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines number of characters",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'search'",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | number | FormData | File"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "method",
              "name": "showPicker",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "valueAsNumber",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "privacy": "protected",
              "default": "new TypeFormControlController<FormControl>(this)",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "composedLabel",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#setValue",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "config",
                  "default": "{ valueType: 'string' }"
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onInput",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "input",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determines number of characters",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "superclass": {
            "name": "BpInput",
            "package": "@blueprintui/components/input"
          },
          "tagName": "bp-search",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpSearch",
          "declaration": {
            "name": "BpSearch",
            "module": "/search/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/search/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/search/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/select/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/select/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Select\n\n```typescript\nimport '@blueprintui/components/include/select.js';\n```\n\n```html\n<bp-field>\n  <label>select</label>\n  <bp-select>\n    <bp-option>option one</bp-option>\n    <bp-option>option two</bp-option>\n    <bp-option>option three</bp-option>\n  </bp-select>\n</bp-field>\n```",
          "name": "BpSelect",
          "slots": [
            {
              "description": "For projecting select and label",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#options",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#input",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#updateInitialSelected"
            },
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines number of characters",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | number | FormData | File"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "valueAsNumber",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "privacy": "protected",
              "default": "new TypeFormControlController<FormControl>(this)",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "composedLabel",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#setValue",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "config",
                  "default": "{ valueType: 'string' }"
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onInput",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "input"
            },
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change"
            }
          ],
          "superclass": {
            "name": "FormControl",
            "package": "@blueprintui/components/forms"
          },
          "tagName": "bp-select",
          "customElement": true,
          "attributes": [
            {
              "name": "accessor",
              "description": "determines number of characters",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "BpOption",
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "attribute": "accessor"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpSelect",
          "declaration": {
            "name": "BpSelect",
            "module": "/select/element.js"
          }
        },
        {
          "kind": "js",
          "name": "BpOption",
          "declaration": {
            "name": "BpOption",
            "module": "/select/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/select/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/select/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/shell/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/shell/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/shell.js';\n```\n\n```html\n<bp-shell></bp-shell>\n```",
          "name": "BpShell",
          "slots": [
            {
              "description": "slot for content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determine user closable state",
              "privacy": "private",
              "attribute": "accessor"
            },
            {
              "kind": "field",
              "name": "breakpoint",
              "type": {
                "text": "number"
              },
              "default": "1024"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "interaction",
              "type": {
                "text": "'auto'"
              }
            },
            {
              "kind": "field",
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "width",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "#nav",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#header",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#drawerButton",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "interactionCloseController",
              "type": {
                "text": "InteractionCloseController<this>"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#scroll"
            },
            {
              "kind": "method",
              "name": "#close"
            }
          ],
          "events": [
            {
              "name": "scroll",
              "type": {
                "text": "Event"
              }
            },
            {
              "description": "dispatched when the drawer is opened",
              "name": "open"
            },
            {
              "description": "dispatched when the drawer is closed",
              "name": "close"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determine user closable state",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-shell",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpShell",
          "declaration": {
            "name": "BpShell",
            "module": "/shell/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/shell/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/stepper/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/stepper/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Stepper\n\n```typescript\nimport '@blueprintui/components/include/stepper.js';\n```\n\n```html\n<bp-stepper aria-label=\"stepper\">\n  <bp-stepper-item selected><a href=\"#\">Step 1</a></bp-stepper-item>\n  <bp-stepper-item>Step 2</bp-stepper-item>\n  <bp-stepper-item>Step 3</bp-stepper-item>\n</bp-stepper>\n```",
          "name": "BpStepper",
          "cssProperties": [
            {
              "name": "--font-size"
            },
            {
              "name": "--font-weight"
            },
            {
              "name": "--color"
            },
            {
              "name": "--gap"
            }
          ],
          "slots": [
            {
              "description": "stepper items",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "'horizontal' | 'vertical'"
              },
              "default": "'horizontal'"
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            },
            {
              "kind": "field",
              "name": "items",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#updateItems"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "fieldName": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-stepper",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpStepper",
          "declaration": {
            "name": "BpStepper",
            "module": "/stepper/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/stepper/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/stepper/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./item/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/stepper/item/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/stepper/item/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BpStepperItem",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--cursor"
            },
            {
              "name": "--border-width"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--status-color"
            }
          ],
          "cssParts": [
            {
              "name": "icon"
            },
            {
              "name": "badge"
            }
          ],
          "slots": [
            {
              "description": "item content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "makes the element not mutable, meaning the user can not interact with button",
              "privacy": "private",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "'accent' | 'success' | 'warning' | 'danger'"
              }
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "_layout",
              "type": {
                "text": "'horizontal' | 'vertical'"
              },
              "default": "'horizontal'"
            },
            {
              "kind": "field",
              "name": "_index",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "makes the element not mutable, meaning the user can not interact with button",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-stepper-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpStepperItem",
          "declaration": {
            "name": "BpStepperItem",
            "module": "/stepper/item/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/switch/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/switch/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/switch.js';\n```\n\n```html\n<bp-field>\n  <label>switch</label>\n  <bp-switch checked></bp-switch>\n</bp-field>\n```",
          "name": "BpSwitch",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--border"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--height"
            },
            {
              "name": "--width"
            },
            {
              "name": "--anchor-background"
            },
            {
              "name": "--anchor-border-radius"
            },
            {
              "name": "--anchor-width"
            },
            {
              "name": "--anchor-height"
            },
            {
              "name": "--toggle-speed"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true"
            },
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines if element is mutable or focusable",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "'on'"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "input"
            },
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determines if element is mutable or focusable",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-switch",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpSwitch",
          "declaration": {
            "name": "BpSwitch",
            "module": "/switch/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/switch/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/switch/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/tabs/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/tabs/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/tabs.js';\n```\n\n```html\n<bp-tabs></bp-tabs>\n```",
          "name": "BpTabs",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--padding"
            }
          ],
          "slots": [
            {}
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "attribute": "accessor"
            },
            {
              "kind": "field",
              "name": "layout",
              "type": {
                "text": "'horizontal' | 'vertical'"
              },
              "default": "'horizontal'"
            },
            {
              "kind": "field",
              "name": "tabs",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#tabPanels",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#updateTabs"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "fieldName": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-tabs",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpTabs",
          "declaration": {
            "name": "BpTabs",
            "module": "/tabs/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/tabs/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/tabs/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./panel/element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./list/element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./tab/element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/tabs/list/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/tabs/list/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/tabs.js';\n```\n\n```html\n<bp-tab-list></bp-tab-list>\n```",
          "name": "BpTabList",
          "cssProperties": [
            {
              "name": "--background"
            }
          ],
          "slots": [
            {}
          ],
          "members": [
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-tab-list",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpTabList",
          "declaration": {
            "name": "BpTabList",
            "module": "/tabs/list/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/tabs/panel/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/tabs/panel/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/tabs.js';\n```\n\n```html\n<bp-tab-panel></bp-tab-panel>\n```",
          "name": "BpTabPanel",
          "cssProperties": [
            {
              "name": "--padding"
            }
          ],
          "slots": [
            {}
          ],
          "members": [
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            },
            {
              "kind": "field",
              "name": "accessor"
            },
            {
              "kind": "field",
              "name": "tab",
              "type": {
                "text": "BpTab"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-tab-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpTabPanel",
          "declaration": {
            "name": "BpTabPanel",
            "module": "/tabs/panel/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/tabs/tab/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/tabs/tab/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/tabs.js';\n```\n\n```html\n<bp-tab></bp-tab>\n```",
          "name": "BpTab",
          "cssProperties": [
            {
              "name": "--background"
            }
          ],
          "slots": [
            {}
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "selected visual state",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "tabPanel",
              "type": {
                "text": "BpTabPanel"
              }
            },
            {
              "kind": "field",
              "name": "pressed",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetElement",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetAction",
              "type": {
                "text": "| 'toggle'\n    | 'show'\n    | 'hide'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popovertarget",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "HTMLFormElement"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAction",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formEnctype",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formMethod",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formNoValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formTarget",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "labels",
              "type": {
                "text": "NodeListOf<HTMLLabelElement>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validity",
              "type": {
                "text": "ValidityState"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "willValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "checkValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "reportValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "setCustomValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              },
              "readonly": true,
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "selected visual state",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertargetaction",
              "description": "determines the current value",
              "attribute": "accessor",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertarget",
              "description": "determines the current value",
              "attribute": "popovertargetaction",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseButton",
            "package": "@blueprintui/components/internals"
          },
          "tagName": "bp-tab",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpTab",
          "declaration": {
            "name": "BpTab",
            "module": "/tabs/tab/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/tag/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/tag/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/tag.js';\n```\n\n```html\n<bp-tag status=\"accent\">item</bp-tag>\n```",
          "name": "BpTag",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--border"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--line-height"
            }
          ],
          "slots": [
            {
              "description": "badge content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determine the visual status state",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "'accent' | 'success' | 'warning' | 'danger'"
              }
            },
            {
              "kind": "field",
              "name": "pressed",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetElement",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popoverTargetAction",
              "type": {
                "text": "| 'toggle'\n    | 'show'\n    | 'hide'"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "popovertarget",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "HTMLFormElement"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAction",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formEnctype",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formMethod",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formNoValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formTarget",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "labels",
              "type": {
                "text": "NodeListOf<HTMLLabelElement>"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validationMessage",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "validity",
              "type": {
                "text": "ValidityState"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "willValidate",
              "type": {
                "text": "boolean"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "checkValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "reportValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "setCustomValidity",
              "type": {
                "text": "any"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              },
              "readonly": true,
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determine the visual status state",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertargetaction",
              "description": "determines the current value",
              "attribute": "accessor",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            },
            {
              "name": "popovertarget",
              "description": "determines the current value",
              "attribute": "popovertargetaction",
              "fieldName": "accessor",
              "inheritedFrom": {
                "name": "BaseButton",
                "module": "/internals/components/button.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseButton",
            "package": "@blueprintui/components/internals"
          },
          "tagName": "bp-tag",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpTag",
          "declaration": {
            "name": "BpTag",
            "module": "/tag/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/tag/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/tag/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/textarea/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/textarea/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Form\n\n```typescript\nimport '@blueprintui/components/include/textarea.js';\n```\n\n```html\n<bp-field>\n  <label>textarea</label>\n  <bp-textarea></bp-textarea>\n  <bp-field-message>message text</bp-field-message>\n</bp-field>\n```",
          "name": "BpTextarea",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--border"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--color"
            },
            {
              "name": "--border-radius"
            },
            {
              "name": "--min-height"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determines number of characters",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | number | FormData | File"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "valueAsNumber",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "privacy": "protected",
              "default": "new TypeFormControlController<FormControl>(this)",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "composedLabel",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#setValue",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "config",
                  "default": "{ valueType: 'string' }"
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onInput",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "input"
            },
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determines number of characters",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "superclass": {
            "name": "FormControl",
            "package": "@blueprintui/components/forms"
          },
          "tagName": "bp-textarea",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpTextarea",
          "declaration": {
            "name": "BpTextarea",
            "module": "/textarea/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/textarea/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/textarea/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/time/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/time/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Time Input\n\n```typescript\nimport '@blueprintui/components/include/time.js';\n```\n\n```html\n<bp-field>\n  <label>time</label>\n  <bp-time></bp-time>\n  <bp-field-message>message text</bp-field-message>\n</bp-field>\n```",
          "name": "BpTime",
          "slots": [
            {
              "description": "slot for prefix text or icons",
              "name": "prefix"
            },
            {
              "description": "slot for suffic text or icons",
              "name": "suffix"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "attribute": "accessor",
              "reflects": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'time'",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "suffixTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | number | FormData | File"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "prefixTemplate",
              "type": {
                "text": "TemplateResult | null"
              },
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "method",
              "name": "showPicker",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "autocomplete",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "represents the name of the current <form> element as a string.",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "minLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "maxLength",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "number"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "valueAsNumber",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "typeFormControlController",
              "privacy": "protected",
              "default": "new TypeFormControlController<FormControl>(this)",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "field",
              "name": "composedLabel",
              "privacy": "protected",
              "readonly": true,
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "#setValue",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "config",
                  "default": "{ valueType: 'string' }"
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            },
            {
              "kind": "method",
              "name": "onInput",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "InputEvent"
                  }
                },
                {
                  "name": "config",
                  "optional": true,
                  "type": {
                    "text": "{ valueType: 'string' | 'number' }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "input",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            },
            {
              "type": {
                "text": "InputEvent"
              },
              "description": "occurs when the value changes",
              "name": "change",
              "inheritedFrom": {
                "name": "BpInput",
                "module": "/input/element.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "fieldName": "accessor",
              "attribute": "accessor",
              "inheritedFrom": {
                "name": "FormControl",
                "module": "/forms/form-control/element.js"
              }
            }
          ],
          "superclass": {
            "name": "BpInput",
            "package": "@blueprintui/components/input"
          },
          "tagName": "bp-time",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpTime",
          "declaration": {
            "name": "BpTime",
            "module": "/time/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/time/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/time/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/toast/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/toast/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/toast.js';\n```\n\n```html\n<bp-toast></bp-toast>\n```",
          "name": "BpToast",
          "cssProperties": [
            {
              "name": "--padding"
            },
            {
              "name": "--filter"
            },
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--width"
            },
            {
              "name": "--height"
            },
            {
              "name": "--min-width"
            },
            {
              "name": "--min-height"
            },
            {
              "name": "--font-size"
            }
          ],
          "slots": [
            {
              "description": "content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determine the visual status state",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "Position"
              },
              "default": "'top'"
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "HTMLElement | string"
              }
            },
            {
              "kind": "field",
              "name": "trigger",
              "type": {
                "text": "HTMLElement | string"
              }
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "'accent' | 'success' | 'warning' | 'danger'"
              }
            },
            {
              "kind": "field",
              "name": "hidden",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            },
            {
              "kind": "field",
              "name": "typePopoverController",
              "type": {
                "text": "TypePopoverController<this>"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#close"
            }
          ],
          "events": [
            {
              "description": "dispatched when the toast is opened",
              "name": "open"
            },
            {
              "description": "dispatched when the toast is closed",
              "name": "close"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determine the visual status state",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-toast",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpToast",
          "declaration": {
            "name": "BpToast",
            "module": "/toast/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/toast/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/toast/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/tooltip/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/tooltip/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/tooltip.js';\n```\n\n```html\n<bp-tooltip></bp-tooltip>\n```",
          "name": "BpTooltip",
          "cssProperties": [
            {
              "name": "--padding"
            },
            {
              "name": "--filter"
            },
            {
              "name": "--background"
            },
            {
              "name": "--color"
            },
            {
              "name": "--width"
            },
            {
              "name": "--height"
            },
            {
              "name": "--min-width"
            },
            {
              "name": "--min-height"
            },
            {
              "name": "--font-size"
            }
          ],
          "slots": [
            {
              "description": "content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "closable",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "Position"
              },
              "default": "'top'"
            },
            {
              "kind": "field",
              "name": "anchor",
              "type": {
                "text": "HTMLElement | string"
              }
            },
            {
              "kind": "field",
              "name": "trigger",
              "type": {
                "text": "HTMLElement | string"
              }
            },
            {
              "kind": "field",
              "name": "i18n"
            },
            {
              "kind": "field",
              "name": "hidden",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            },
            {
              "kind": "field",
              "name": "typePopoverController",
              "type": {
                "text": "TypePopoverController<this>"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#close"
            }
          ],
          "events": [
            {
              "description": "dispatched when the tooltip is opened",
              "name": "open"
            },
            {
              "description": "dispatched when the tooltip is closed",
              "name": "close"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "set default aria/i18n strings",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-tooltip",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpTooltip",
          "declaration": {
            "name": "BpTooltip",
            "module": "/tooltip/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/tooltip/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/tooltip/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/tree/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/tree/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "```typescript\nimport '@blueprintui/components/include/tree.js';\n```\n\n```html\n<bp-tree></bp-tree>\n```",
          "name": "BpTree",
          "cssProperties": [
            {
              "name": "--background"
            }
          ],
          "slots": [
            {
              "description": "tree items",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "determine if tree items can be selected",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "interaction",
              "type": {
                "text": "'auto'"
              }
            },
            {
              "kind": "field",
              "name": "selectable",
              "type": {
                "text": "'multi' | 'single'"
              }
            },
            {
              "kind": "field",
              "name": "openItems",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#items",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            },
            {
              "kind": "method",
              "name": "#slotchange"
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "determine if tree items can be selected",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-tree",
          "customElement": true
        },
        {
          "kind": "function",
          "name": "updateSelection",
          "parameters": [
            {
              "name": "item",
              "type": {
                "text": "BpTreeItem"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpTree",
          "declaration": {
            "name": "BpTree",
            "module": "/tree/element.js"
          }
        },
        {
          "kind": "js",
          "name": "updateSelection",
          "declaration": {
            "name": "updateSelection",
            "module": "/tree/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/tree/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/tree/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./item/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/tree/item/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/tree/item/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BpTreeItem",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--padding"
            },
            {
              "name": "--gap"
            },
            {
              "name": "--height"
            },
            {
              "name": "--cursor"
            }
          ],
          "slots": [
            {
              "description": "content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "accessor",
              "description": "makes the element not mutable, meaning the user can not interact with button",
              "privacy": "private",
              "attribute": "accessor",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "selectable",
              "type": {
                "text": "'multi' | 'single'"
              }
            },
            {
              "kind": "field",
              "name": "interaction",
              "type": {
                "text": "'auto'"
              }
            },
            {
              "kind": "field",
              "name": "#items",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              }
            },
            {
              "kind": "field",
              "name": "interactionExpandController",
              "type": {
                "text": "InteractionExpandController<this>"
              }
            },
            {
              "kind": "field",
              "name": "interactionSelectController",
              "type": {
                "text": "InteractionSelectController<this>"
              }
            },
            {
              "kind": "method",
              "name": "#toggleExpand",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "accessor",
              "description": "makes the element not mutable, meaning the user can not interact with button",
              "fieldName": "accessor",
              "attribute": "accessor"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-tree-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpTreeItem",
          "declaration": {
            "name": "BpTreeItem",
            "module": "/tree/item/element.js"
          }
        }
      ]
    }
  ]
}
