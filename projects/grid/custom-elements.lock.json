{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "/cell/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/cell/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Grid Cell\n\n```typescript\nimport '@blueprintui/grid/include/core.js';\n```",
          "name": "BpGridCell",
          "cssProperties": [
            {
              "name": "--border-right"
            },
            {
              "name": "--border-left"
            },
            {
              "name": "--min-height"
            },
            {
              "name": "--min-width"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--justify-content"
            },
            {
              "name": "--padding-block"
            },
            {
              "name": "--padding-inline-start"
            },
            {
              "name": "--padding-inline-end"
            },
            {
              "name": "--color"
            },
            {
              "name": "--border-width"
            }
          ],
          "slots": [
            {
              "description": "cell content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "_internals",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'gridcell'"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-grid-cell",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpGridCell",
          "declaration": {
            "name": "BpGridCell",
            "module": "/cell/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/cell/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/cell/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/column/alignment.controller.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ColumnAlignmentController",
          "members": [
            {
              "kind": "field",
              "name": "#alignment",
              "privacy": "private",
              "type": {
                "text": "'start' | 'center' | 'end'"
              }
            },
            {
              "kind": "field",
              "name": "#columnItems",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "#align"
            }
          ]
        },
        {
          "kind": "function",
          "name": "resetAlignmentState",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement & { _internals: ElementInternals }"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ColumnAlignmentController",
          "declaration": {
            "name": "ColumnAlignmentController",
            "module": "/column/alignment.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "resetAlignmentState",
          "declaration": {
            "name": "resetAlignmentState",
            "module": "/column/alignment.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/column/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/column/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Grid Column\n\n```typescript\nimport '@blueprintui/grid/include/core.js';\n```",
          "name": "BpGridColumn",
          "cssProperties": [
            {
              "name": "--min-height"
            },
            {
              "name": "--min-width"
            },
            {
              "name": "--justify-content"
            },
            {
              "name": "--padding-block"
            },
            {
              "name": "--padding-inline"
            },
            {
              "name": "--background"
            },
            {
              "name": "--font-size"
            },
            {
              "name": "--color"
            },
            {
              "name": "--border-width"
            }
          ],
          "slots": [
            {
              "description": "column content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "width",
              "type": {
                "text": "string"
              },
              "description": "control width of grid column via numeric or CSS value types",
              "attribute": "width"
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "'sticky' | 'fixed'"
              },
              "description": "position individual column relative to the grid scroll container",
              "attribute": "position",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "alignment",
              "type": {
                "text": "'start' | 'center' | 'end'"
              },
              "description": "align column content and corresponding column cells",
              "attribute": "alignment",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_internals",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'columnheader'"
            },
            {
              "kind": "field",
              "name": "ariaSort",
              "type": {
                "text": "string"
              },
              "default": "'none'"
            }
          ],
          "attributes": [
            {
              "name": "width",
              "type": {
                "text": "string"
              },
              "description": "control width of grid column via numeric or CSS value types",
              "fieldName": "width"
            },
            {
              "name": "position",
              "type": {
                "text": "'sticky' | 'fixed'"
              },
              "description": "position individual column relative to the grid scroll container",
              "fieldName": "position"
            },
            {
              "name": "alignment",
              "type": {
                "text": "'start' | 'center' | 'end'"
              },
              "description": "align column content and corresponding column cells",
              "fieldName": "alignment"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-grid-column",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpGridColumn",
          "declaration": {
            "name": "BpGridColumn",
            "module": "/column/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/column/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/column/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/column/position.controller.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ColumnPositionController",
          "members": [
            {
              "kind": "field",
              "name": "#styles",
              "privacy": "private",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "#previousPosition",
              "privacy": "private",
              "type": {
                "text": "'sticky' | 'fixed'"
              }
            },
            {
              "kind": "field",
              "name": "#hostGrid",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "#update"
            },
            {
              "kind": "method",
              "name": "#calculateColumnPositionStyles"
            },
            {
              "kind": "method",
              "name": "#getPositionStyle",
              "parameters": [
                {
                  "name": "side",
                  "type": {
                    "text": "'left' | 'right'"
                  }
                },
                {
                  "name": "gridPosition",
                  "type": {
                    "text": "DOMRect"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#borderStyle",
              "parameters": [
                {
                  "name": "side",
                  "type": {
                    "text": "'left' | 'right'"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ColumnPositionController",
          "declaration": {
            "name": "ColumnPositionController",
            "module": "/column/position.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/column/width.controller.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GridColumnWidthController",
          "members": [
            {
              "kind": "field",
              "name": "#grid",
              "privacy": "private",
              "type": {
                "text": "BpGrid"
              }
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "#updateSetColumnWidth"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GridColumnWidthController",
          "declaration": {
            "name": "GridColumnWidthController",
            "module": "/column/width.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/examples.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "grid2",
          "type": {
            "text": "object"
          },
          "default": "{\n  columns: [\n    { id: 1, label: 'Column 1' },\n    { id: 2, label: 'Column 2' },\n    { id: 4, label: 'Column 3' },\n    { id: 8, label: 'Column 4' },\n    { id: 16, label: 'Column 5' }\n  ],\n  rows: [\n    {\n      id: '0',\n      cells: [\n        { value: 'Cell 0-1' },\n        { value: 'Cell 0-2' },\n        { value: 'Cell 0-3' },\n        { value: 'Cell 0-4' },\n        { value: 'Cell 0-5' }\n      ]\n    },\n    {\n      id: '1',\n      cells: [\n        { value: 'Cell 1-1' },\n        { value: 'Cell 1-2' },\n        { value: 'Cell 1-3' },\n        { value: 'Cell 1-4' },\n        { value: 'Cell 1-5' }\n      ]\n    },\n    {\n      id: '2',\n      cells: [\n        { value: 'Cell 2-1' },\n        { value: 'Cell 2-2' },\n        { value: 'Cell 2-3' },\n        { value: 'Cell 2-4' },\n        { value: 'Cell 2-5' }\n      ]\n    },\n    {\n      id: '3',\n      cells: [\n        { value: 'Cell 3-1' },\n        { value: 'Cell 3-2' },\n        { value: 'Cell 3-3' },\n        { value: 'Cell 3-4' },\n        { value: 'Cell 3-5' }\n      ]\n    },\n    {\n      id: '4',\n      cells: [\n        { value: 'Cell 4-1' },\n        { value: 'Cell 4-2' },\n        { value: 'Cell 4-3' },\n        { value: 'Cell 4-4' },\n        { value: 'Cell 4-5' }\n      ]\n    },\n    {\n      id: '5',\n      cells: [\n        { value: 'Cell 5-1' },\n        { value: 'Cell 5-2' },\n        { value: 'Cell 5-3' },\n        { value: 'Cell 5-4' },\n        { value: 'Cell 5-5' }\n      ]\n    },\n    {\n      id: '6',\n      cells: [\n        { value: 'Cell 6-1' },\n        { value: 'Cell 6-2' },\n        { value: 'Cell 6-3' },\n        { value: 'Cell 6-4' },\n        { value: 'Cell 6-5' }\n      ]\n    },\n    {\n      id: '7',\n      cells: [\n        { value: 'Cell 7-1' },\n        { value: 'Cell 7-2' },\n        { value: 'Cell 7-3' },\n        { value: 'Cell 7-4' },\n        { value: 'Cell 7-5' }\n      ]\n    },\n    {\n      id: '8',\n      cells: [\n        { value: 'Cell 8-1' },\n        { value: 'Cell 8-2' },\n        { value: 'Cell 8-3' },\n        { value: 'Cell 8-4' },\n        { value: 'Cell 8-5' }\n      ]\n    },\n    {\n      id: '9',\n      cells: [\n        { value: 'Cell 9-1' },\n        { value: 'Cell 9-2' },\n        { value: 'Cell 9-3' },\n        { value: 'Cell 9-4' },\n        { value: 'Cell 9-5' }\n      ]\n    },\n    {\n      id: '10',\n      cells: [\n        { value: 'Cell 10-1' },\n        { value: 'Cell 10-2' },\n        { value: 'Cell 10-3' },\n        { value: 'Cell 10-4' },\n        { value: 'Cell 10-5' }\n      ]\n    },\n    {\n      id: '11',\n      cells: [\n        { value: 'Cell 11-1' },\n        { value: 'Cell 11-2' },\n        { value: 'Cell 11-3' },\n        { value: 'Cell 11-4' },\n        { value: 'Cell 11-5' }\n      ]\n    },\n    {\n      id: '12',\n      cells: [\n        { value: 'Cell 12-1' },\n        { value: 'Cell 12-2' },\n        { value: 'Cell 12-3' },\n        { value: 'Cell 12-4' },\n        { value: 'Cell 12-5' }\n      ]\n    },\n    {\n      id: '13',\n      cells: [\n        { value: 'Cell 13-1' },\n        { value: 'Cell 13-2' },\n        { value: 'Cell 13-3' },\n        { value: 'Cell 13-4' },\n        { value: 'Cell 13-5' }\n      ]\n    },\n    {\n      id: '14',\n      cells: [\n        { value: 'Cell 14-1' },\n        { value: 'Cell 14-2' },\n        { value: 'Cell 14-3' },\n        { value: 'Cell 14-4' },\n        { value: 'Cell 14-5' }\n      ]\n    },\n    {\n      id: '15',\n      cells: [\n        { value: 'Cell 15-1' },\n        { value: 'Cell 15-2' },\n        { value: 'Cell 15-3' },\n        { value: 'Cell 15-4' },\n        { value: 'Cell 15-5' }\n      ]\n    },\n    {\n      id: '',\n      cells: [\n        { value: 'Cell 16-1' },\n        { value: 'Cell 16-2' },\n        { value: 'Cell 16-3' },\n        { value: 'Cell 16-4' },\n        { value: 'Cell 16-5' }\n      ]\n    },\n    {\n      id: '17',\n      cells: [\n        { value: 'Cell 17-1' },\n        { value: 'Cell 17-2' },\n        { value: 'Cell 17-3' },\n        { value: 'Cell 17-4' },\n        { value: 'Cell 17-5' }\n      ]\n    },\n    {\n      id: '18',\n      cells: [\n        { value: 'Cell 18-1' },\n        { value: 'Cell 18-2' },\n        { value: 'Cell 18-3' },\n        { value: 'Cell 18-4' },\n        { value: 'Cell 18-5' }\n      ]\n    },\n    {\n      id: '19',\n      cells: [\n        { value: 'Cell 19-1' },\n        { value: 'Cell 19-2' },\n        { value: 'Cell 19-3' },\n        { value: 'Cell 18-4' },\n        { value: 'Cell 19-5' }\n      ]\n    },\n    {\n      id: '20',\n      cells: [\n        { value: 'Cell 20-1' },\n        { value: 'Cell 20-2' },\n        { value: 'Cell 20-3' },\n        { value: 'Cell 18-4' },\n        { value: 'Cell 20-5' }\n      ]\n    }\n  ]\n}"
        },
        {
          "kind": "function",
          "name": "getGrid",
          "parameters": [
            {
              "name": "options",
              "default": "{ columns: 5, rows: 7 }"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "grid"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "grid2",
          "declaration": {
            "name": "grid2",
            "module": "/examples.data.js"
          }
        },
        {
          "kind": "js",
          "name": "getGrid",
          "declaration": {
            "name": "getGrid",
            "module": "/examples.data.js"
          }
        },
        {
          "kind": "js",
          "name": "grid",
          "declaration": {
            "name": "grid",
            "module": "/examples.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/footer/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/footer/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Grid Footer\n\n```typescript\nimport '@blueprintui/grid/include/core.js';\n```",
          "name": "BpGridFooter",
          "cssProperties": [
            {
              "name": "--min-height"
            },
            {
              "name": "--background"
            },
            {
              "name": "--padding-block"
            },
            {
              "name": "--padding-inline"
            },
            {
              "name": "--border-width"
            }
          ],
          "slots": [
            {
              "description": "footer content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "_colSpan",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-grid-footer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpGridFooter",
          "declaration": {
            "name": "BpGridFooter",
            "module": "/footer/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/footer/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/footer/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/grid/dom.controller.js",
      "declarations": [
        {
          "kind": "class",
          "description": "controller for managing efficient DOM queries for bp-grid",
          "name": "GridDOMController",
          "members": [
            {
              "kind": "field",
              "name": "#placeholder",
              "privacy": "private",
              "type": {
                "text": "BpGridPlaceholder"
              }
            },
            {
              "kind": "field",
              "name": "placeholder",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#footer",
              "privacy": "private",
              "type": {
                "text": "BpGridFooter"
              }
            },
            {
              "kind": "field",
              "name": "footer",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#rows",
              "privacy": "private",
              "type": {
                "text": "BpGridRow[]"
              }
            },
            {
              "kind": "field",
              "name": "rows",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#columns",
              "privacy": "private",
              "type": {
                "text": "BpGridColumn[]"
              }
            },
            {
              "kind": "field",
              "name": "columns",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#cells",
              "privacy": "private",
              "type": {
                "text": "BpGridCell[]"
              }
            },
            {
              "kind": "field",
              "name": "cells",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#grid",
              "privacy": "private",
              "type": {
                "text": "HTMLElement[][]"
              }
            },
            {
              "kind": "field",
              "name": "grid",
              "type": {
                "text": "HTMLElement[][]"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#updates",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "isStatic",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "#resetCache"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GridDOMController",
          "declaration": {
            "name": "GridDOMController",
            "module": "/grid/dom.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/grid/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/grid/element.global.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/grid/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Grid\n\n```typescript\nimport '@blueprintui/grid/include/core.js';\n```",
          "name": "BpGrid",
          "cssProperties": [
            {
              "name": "--background"
            },
            {
              "name": "--body-height"
            },
            {
              "name": "--scrollbar-background"
            },
            {
              "name": "--scrollbar-thumb-background"
            },
            {
              "name": "--column-height"
            },
            {
              "name": "--row-height"
            },
            {
              "name": "--scroll-padding-top"
            },
            {
              "name": "--row-content-visibility"
            },
            {
              "name": "--border-width"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "i18n",
              "description": "set default aria/i18n strings",
              "attribute": "i18n"
            },
            {
              "kind": "field",
              "name": "height",
              "type": {
                "text": "string"
              },
              "description": "max height for grid container",
              "attribute": "height",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "columnLayout",
              "type": {
                "text": "'fixed' | 'flex'"
              },
              "default": "'fixed'",
              "description": "column layout determines initial column width calculation",
              "attribute": "column-layout",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "rowStyle",
              "type": {
                "text": "Permutations<\n    'hover' | 'stripe' | 'border'\n  >"
              },
              "description": "determines the visual style for rows",
              "attribute": "row-style",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "columnStyle",
              "type": {
                "text": "Permutations<'hover' | 'border'>"
              },
              "description": "determines the visual style for columns",
              "attribute": "column-style",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selectable",
              "type": {
                "text": "'multi' | 'single' | null"
              },
              "description": "initializes grid to appropriate aria/a11y settings for selections",
              "attribute": "selectable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "scrollLock",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "disables scroll container",
              "attribute": "scroll-lock",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "layer",
              "type": {
                "text": "'flat' | 'container'"
              },
              "default": "'container'",
              "description": "determines the visual layer style (container vs flat for nesting)",
              "attribute": "layer",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "rangeSelection",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "privacy": "private",
              "attribute": "range-selection",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_id",
              "privacy": "private",
              "attribute": "_id",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "gridLayoutController",
              "privacy": "protected",
              "default": "new GridLayoutController(this)"
            },
            {
              "kind": "field",
              "name": "gridLayoutControllerConfig",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#DOMController",
              "privacy": "private",
              "type": {
                "text": "GridDOMController"
              },
              "default": "new GridDOMController(this)"
            },
            {
              "kind": "field",
              "name": "grid",
              "type": {
                "text": "HTMLElement[][]"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "keyNavGrid",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_internals"
            },
            {
              "kind": "method",
              "name": "#intializeColumnSort"
            },
            {
              "kind": "method",
              "name": "#update"
            },
            {
              "kind": "method",
              "name": "#initializeGrid"
            },
            {
              "kind": "method",
              "name": "#intializeColumns"
            },
            {
              "kind": "method",
              "name": "#initializeRows"
            },
            {
              "kind": "method",
              "name": "#initializeCells",
              "description": "cells with focusable items use table navigation ctrl+alt+arrow https://github.com/nvaccess/nvda/issues/7718"
            },
            {
              "kind": "method",
              "name": "#initializePlaceholder"
            },
            {
              "kind": "method",
              "name": "#intializeFooter"
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'grid'"
            }
          ],
          "attributes": [
            {
              "name": "i18n",
              "description": "set default aria/i18n strings",
              "fieldName": "i18n"
            },
            {
              "name": "height",
              "type": {
                "text": "string"
              },
              "description": "max height for grid container",
              "fieldName": "height"
            },
            {
              "name": "column-layout",
              "type": {
                "text": "'fixed' | 'flex'"
              },
              "default": "'fixed'",
              "description": "column layout determines initial column width calculation",
              "fieldName": "columnLayout"
            },
            {
              "name": "row-style",
              "type": {
                "text": "Permutations<\n    'hover' | 'stripe' | 'border'\n  >"
              },
              "description": "determines the visual style for rows",
              "fieldName": "rowStyle"
            },
            {
              "name": "column-style",
              "type": {
                "text": "Permutations<'hover' | 'border'>"
              },
              "description": "determines the visual style for columns",
              "fieldName": "columnStyle"
            },
            {
              "name": "selectable",
              "type": {
                "text": "'multi' | 'single' | null"
              },
              "description": "initializes grid to appropriate aria/a11y settings for selections",
              "fieldName": "selectable"
            },
            {
              "name": "scroll-lock",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "disables scroll container",
              "fieldName": "scrollLock"
            },
            {
              "name": "layer",
              "type": {
                "text": "'flat' | 'container'"
              },
              "default": "'container'",
              "description": "determines the visual layer style (container vs flat for nesting)",
              "fieldName": "layer"
            },
            {
              "name": "range-selection",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "rangeSelection"
            },
            {
              "name": "_id",
              "fieldName": "_id"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-grid",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpGrid",
          "declaration": {
            "name": "BpGrid",
            "module": "/grid/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/grid/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/grid/hover.controller.js",
      "declarations": [
        {
          "kind": "class",
          "description": "controller for managing hover effects",
          "name": "GridHoverController",
          "members": [
            {
              "kind": "field",
              "name": "#columnStyles",
              "privacy": "private",
              "type": {
                "text": "CSSStyleSheet"
              }
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "#initializeColumnHoverState"
            },
            {
              "kind": "method",
              "name": "#removeHoverStyles"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GridHoverController",
          "declaration": {
            "name": "GridHoverController",
            "module": "/grid/hover.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/grid/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/grid/layout.controller.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "GridLayoutController",
          "members": [
            {
              "kind": "field",
              "name": "#observers",
              "privacy": "private",
              "type": {
                "text": "MutationObserver[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "#_columns",
              "privacy": "private",
              "type": {
                "text": "NodeListOf<Column> | Column[]"
              }
            },
            {
              "kind": "field",
              "name": "#columns",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#config",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#visibleColumns",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#lastVisibleColumn",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            },
            {
              "kind": "method",
              "name": "#columnAddedOrRemoved",
              "parameters": [
                {
                  "name": "mutation",
                  "type": {
                    "text": "MutationRecord"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#initializeColumnWidths"
            },
            {
              "kind": "method",
              "name": "#getLastColumnWidth"
            },
            {
              "kind": "method",
              "name": "#updateLayout"
            },
            {
              "kind": "method",
              "name": "#createColumnGrids"
            },
            {
              "kind": "method",
              "name": "#setColumnDividers"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GridLayoutController",
          "declaration": {
            "name": "GridLayoutController",
            "module": "/grid/layout.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/header/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/header/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Grid Row\n\n```typescript\nimport '@blueprintui/grid/include/core.js';\n```",
          "name": "BpGridHeader",
          "cssProperties": [
            {
              "name": "--border-top"
            },
            {
              "name": "--border-bottom"
            },
            {
              "name": "--background"
            },
            {
              "name": "--min-height"
            },
            {
              "name": "--border-width"
            },
            {
              "name": "--border-color"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "_internals",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'row'"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-grid-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpGridHeader",
          "declaration": {
            "name": "BpGridHeader",
            "module": "/header/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/header/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/include/column-alignment.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/column-position.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/core.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/footer.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/hover.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/keynav.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/placeholder.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/include/row-position.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./cell/element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./column/element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./footer/element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./placeholder/element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./row/element.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./grid/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/controllers/interaction-scroll-visibility.controller.js",
      "declarations": [
        {
          "kind": "function",
          "name": "interactionScrollVisibility",
          "return": {
            "type": {
              "text": "ClassDecorator"
            }
          },
          "description": "Default to `content-visibility: auto` for lazy render, on scroll set all row items to `content-visibility: visible` for eager render\nEnables fast initial render and smooth eager rendering anytime after for items within a bounded scroll box."
        },
        {
          "kind": "class",
          "description": "",
          "name": "InteractionScrollVisibilityController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "#setVisibility"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "interactionScrollVisibility",
          "declaration": {
            "name": "interactionScrollVisibility",
            "module": "/internals/controllers/interaction-scroll-visibility.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "InteractionScrollVisibilityController",
          "declaration": {
            "name": "InteractionScrollVisibilityController",
            "module": "/internals/controllers/interaction-scroll-visibility.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./controllers/interaction-scroll-visibility.controller.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/events.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/traversal.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/styles/focus.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/internals/types/index.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/internals/utils/events.js",
      "declarations": [
        {
          "kind": "function",
          "name": "onChildListMutation",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "fn",
              "type": {
                "text": "(mutation?: MutationRecord) => void"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "onChildListMutation",
          "declaration": {
            "name": "onChildListMutation",
            "module": "/internals/utils/events.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/utils/focus.js",
      "declarations": [
        {
          "kind": "function",
          "name": "focusable",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "Element"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "simpleFocusable",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "Element"
              }
            }
          ],
          "description": "focus primitives, any interactive element does not requiring advanced keyboard interactions like arrow/navigation"
        },
        {
          "kind": "function",
          "name": "getActiveElement",
          "return": {
            "type": {
              "text": "Element | null"
            }
          },
          "parameters": [
            {
              "name": "root",
              "default": "document",
              "type": {
                "text": "Document | ShadowRoot"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "focusElement",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "setActiveKeyListItem",
          "parameters": [
            {
              "name": "items",
              "type": {
                "text": "NodeListOf<HTMLElement> | HTMLElement[]"
              }
            },
            {
              "name": "item",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "initializeKeyListItems",
          "parameters": [
            {
              "name": "items",
              "type": {
                "text": "NodeListOf<HTMLElement> | HTMLElement[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "focusable",
          "declaration": {
            "name": "focusable",
            "module": "/internals/utils/focus.js"
          }
        },
        {
          "kind": "js",
          "name": "simpleFocusable",
          "declaration": {
            "name": "simpleFocusable",
            "module": "/internals/utils/focus.js"
          }
        },
        {
          "kind": "js",
          "name": "getActiveElement",
          "declaration": {
            "name": "getActiveElement",
            "module": "/internals/utils/focus.js"
          }
        },
        {
          "kind": "js",
          "name": "focusElement",
          "declaration": {
            "name": "focusElement",
            "module": "/internals/utils/focus.js"
          }
        },
        {
          "kind": "js",
          "name": "setActiveKeyListItem",
          "declaration": {
            "name": "setActiveKeyListItem",
            "module": "/internals/utils/focus.js"
          }
        },
        {
          "kind": "js",
          "name": "initializeKeyListItems",
          "declaration": {
            "name": "initializeKeyListItems",
            "module": "/internals/utils/focus.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/internals/utils/traversal.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getFlattenedFocusableItems",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "Node"
              }
            },
            {
              "name": "depth",
              "default": "10"
            }
          ]
        },
        {
          "kind": "function",
          "name": "getFlattenedDOMTree",
          "return": {
            "type": {
              "text": "HTMLElement[]"
            }
          },
          "parameters": [
            {
              "name": "node",
              "type": {
                "text": "Node"
              }
            },
            {
              "name": "depth",
              "default": "10"
            }
          ]
        },
        {
          "kind": "function",
          "name": "getChildren",
          "parameters": [
            {
              "name": "node",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isObject",
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "mergeObjects",
          "return": {
            "type": {
              "text": "object"
            }
          },
          "parameters": [
            {
              "name": "objs",
              "type": {
                "text": "object[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "insertSpanningCells",
          "parameters": [
            {
              "name": "cells",
              "type": {
                "text": "HTMLElement[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getFlattenedFocusableItems",
          "declaration": {
            "name": "getFlattenedFocusableItems",
            "module": "/internals/utils/traversal.js"
          }
        },
        {
          "kind": "js",
          "name": "getFlattenedDOMTree",
          "declaration": {
            "name": "getFlattenedDOMTree",
            "module": "/internals/utils/traversal.js"
          }
        },
        {
          "kind": "js",
          "name": "getChildren",
          "declaration": {
            "name": "getChildren",
            "module": "/internals/utils/traversal.js"
          }
        },
        {
          "kind": "js",
          "name": "isObject",
          "declaration": {
            "name": "isObject",
            "module": "/internals/utils/traversal.js"
          }
        },
        {
          "kind": "js",
          "name": "mergeObjects",
          "declaration": {
            "name": "mergeObjects",
            "module": "/internals/utils/traversal.js"
          }
        },
        {
          "kind": "js",
          "name": "insertSpanningCells",
          "declaration": {
            "name": "insertSpanningCells",
            "module": "/internals/utils/traversal.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/placeholder/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/placeholder/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Grid Placeholder\n\n```typescript\nimport '@blueprintui/grid/include/core.js';\n```",
          "name": "BpGridPlaceholder",
          "members": [
            {
              "kind": "field",
              "name": "i18n",
              "description": "set default aria/i18n strings",
              "attribute": "i18n"
            },
            {
              "kind": "field",
              "name": "_colSpan",
              "type": {
                "text": "string"
              },
              "default": "'0'"
            },
            {
              "kind": "field",
              "name": "bpDraggableItem",
              "type": {
                "text": "null"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "i18n",
              "description": "set default aria/i18n strings",
              "fieldName": "i18n"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-grid-placeholder",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpGridPlaceholder",
          "declaration": {
            "name": "BpGridPlaceholder",
            "module": "/placeholder/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/placeholder/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/placeholder/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/row/element.css",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/row/element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Grid Row\n\n```typescript\nimport '@blueprintui/grid/include/core.js';\n```",
          "name": "BpGridRow",
          "cssProperties": [
            {
              "name": "--border-top"
            },
            {
              "name": "--border-bottom"
            },
            {
              "name": "--background"
            },
            {
              "name": "--min-height"
            },
            {
              "name": "--border-width"
            },
            {
              "name": "--border-color"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "description": "selected visual state",
              "attribute": "selected",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "'fixed' | 'sticky' | ''"
              },
              "description": "position individual row relative to the grid scroll container",
              "attribute": "position",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_internals",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'row'"
            }
          ],
          "attributes": [
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "description": "selected visual state",
              "fieldName": "selected"
            },
            {
              "name": "position",
              "type": {
                "text": "'fixed' | 'sticky' | ''"
              },
              "description": "position individual row relative to the grid scroll container",
              "fieldName": "position"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bp-grid-row",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BpGridRow",
          "declaration": {
            "name": "BpGridRow",
            "module": "/row/element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/row/element.visual.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "/row/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/row/position.controller.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "RowPositionController",
          "members": [
            {
              "kind": "method",
              "name": "hostUpdated"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RowPositionController",
          "declaration": {
            "name": "RowPositionController",
            "module": "/row/position.controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "/test/index.js",
      "declarations": [
        {
          "kind": "function",
          "name": "createGridVisualFixture",
          "parameters": [
            {
              "name": "template",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "config",
              "optional": true,
              "type": {
                "text": "{ theme?: string; width?: string; height?: string }"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "createGridVisualFixture",
          "declaration": {
            "name": "createGridVisualFixture",
            "module": "/test/index.js"
          }
        }
      ]
    }
  ]
}
